"use strict";(self.webpackChunkng_games=self.webpackChunkng_games||[]).push([[619],{5619:(wr,ce,p)=>{p.r(ce),p.d(ce,{CrystalsModule:()=>Sr});var ge=p(9808),ye=p(2074),c=p(8977),T=p(2722),fe=p(8306),xe=p(136),b=p(6695);class _e extends c.W20{constructor(t){super(),this.WH=t,this.baseSpeed=.025,this.cameraZ=0,this.fov=20,this.speed=0,this.stars=[],this.starAmount=1e3,this.starStretch=5,this.starBaseSize=.05,this.warpSpeed=0,this.addChild((new c.TCu).beginFill(0,1).drawRect(0,0,this.WH.width,this.WH.height).endFill()),this.speedInterval=window.setInterval(()=>{this.warpSpeed=this.warpSpeed>0?0:1},1e4);const e=c.xEZ.from("assets/games/star.png");for(let r=0;r<this.starAmount;r++){const n={sprite:new c.jyi(e),x:0,y:0,z:0};n.sprite.anchor.x=.5,n.sprite.anchor.y=.7,this.randomizeStar(n,!0),this.addChild(n.sprite),this.stars.push(n)}}update(t){this.speed+=(this.warpSpeed-this.speed)/20,this.cameraZ+=10*t*(this.speed+this.baseSpeed);for(let e=0;e<this.starAmount;e++){const r=this.stars[e];r.z<this.cameraZ&&this.randomizeStar(r);const n=r.z-this.cameraZ;r.sprite.x=r.x*(this.fov/n)*this.WH.width+this.WH.width/2,r.sprite.y=r.y*(this.fov/n)*this.WH.width+this.WH.height/2;const o=r.sprite.x-this.WH.width/2,s=r.sprite.y-this.WH.height/2,a=Math.sqrt(o*o+s+s),l=Math.max(0,(2e3-n)/2e3);r.sprite.scale.x=l*this.starBaseSize,r.sprite.scale.y=l*this.starBaseSize+l*this.speed*this.starStretch*a/this.WH.width,r.sprite.rotation=Math.atan2(s,o)+Math.PI/2}}randomizeStar(t,e=!1){const r=Math.random()*Math.PI*2,n=50*Math.random()+1;t.z=e?2e3*Math.random():this.cameraZ+1e3*Math.random()+2e3,t.x=Math.cos(r)*n,t.y=Math.sin(r)*n}}var be=p(6797),Ce=p(2961),C=p(7579),Se=p(7445),we=p(2529),Oe=p(8746),Pe=p(590);const h=64;var v=(()=>{return(i=v||(v={}))[i.READY=0]="READY",i[i.FALLING=1]="FALLING",i[i.FADE_OUT=2]="FADE_OUT",i[i.PULSE=3]="PULSE",i[i.MOVE=4]="MOVE",v;var i})();class Te extends c.jyi{constructor(t,e,r,n){super(n.texture),this.gridX=t,this.gridY=e,this.typeCrystal=r,this.state=v.READY,this.selected=new C.x,this.fell=new C.x,this.moved=new C.x,this.destroyedEvent=new C.x,this.moveSpeed=5,this.pulseDelta=.005,this.score=n.score,this.color=n.color,this.width=h,this.height=h,this.anchor.set(.5,.5),this.defaultScale=this.scale.x,this.selected$=this.selected.asObservable(),this.fell$=this.fell.asObservable(),this.moved$=this.moved.asObservable(),this.destroyed$=this.destroyedEvent.asObservable(),this.interactive=!0,this.on("click",this.onClick.bind(this)),this.on("tap",this.onClick.bind(this))}get pulse(){return this.state===v.PULSE}set pulse(t){this.state=t?v.PULSE:v.READY,t||(this.scale.x=this.defaultScale,this.scale.y=this.defaultScale)}update(t){switch(this.state){case v.FALLING:this.y+=this.moveSpeed*t,this.y>=32+this.gridY*h&&(this.y=32+this.gridY*h,this.state=v.READY,this.fell.next({x:this.gridX,y:this.gridY}));break;case v.FADE_OUT:this.scale.x-=.01*t,this.scale.y-=.01*t,this.scale.x<=0&&(this.destroyedEvent.next({x:this.gridX,y:this.gridY}),this.destroy());break;case v.PULSE:this.scale.x+=this.pulseDelta,this.scale.y+=this.pulseDelta,(this.scale.x<.19||this.scale.x>this.defaultScale)&&(this.pulseDelta*=-1);break;case v.MOVE:let e,r,n=!1;this.gridY===this.toMoveCoords.y?(e=this.toMoveCoords.x*h+32,this.gridX<=this.toMoveCoords.x?(this.x+=t*this.moveSpeed,n=this.x>=e):(this.x-=t*this.moveSpeed,n=this.x<=e),n&&(this.x=e)):(r=this.toMoveCoords.y*h+32,this.gridY<=this.toMoveCoords.y?(this.y+=t*this.moveSpeed,n=this.y>=r,this.y>-32&&(this.alpha+=.01)):(this.y-=t*this.moveSpeed,n=this.y<=r),n&&(this.y=r)),n&&(this.state=v.READY,this.gridX=this.toMoveCoords.x,this.gridY=this.toMoveCoords.y,this.moved.next())}}moveTo(t,e){this.toMoveCoords={x:t,y:e},this.state=v.MOVE}fadeOut(){this.state=v.FADE_OUT}onClick(){(this.state===v.READY||this.state===v.PULSE)&&this.selected.next({x:this.gridX,y:this.gridY})}}class Fe{constructor(t){this.WH=t}getItem(t,e){return this.grid[t][e]}setItem(t,e,r){this.grid[t][e]=r}getGrid(){return this.grid}generateGrid(t){this.countCrystals=t;const e=localStorage.getItem("grid");if(e)this.grid=JSON.parse(e);else{this.grid=[];for(let n=0;n<this.WH.width;n++){this.grid[n]=[];for(let o=0;o<this.WH.height;o++)this.grid[n][o]=b.M.getRandomInt(0,this.countCrystals)}localStorage.setItem("grid",JSON.stringify(this.grid))}let r=this.volatilization();for(;r.length;)r.forEach(n=>{this.grid[n.x][n.y]=b.M.getRandomInt(0,this.countCrystals)}),r=this.volatilization()}fallCrystals(){const t=[];for(let n=0;n<this.WH.width;n++){let s,a,o=this.WH.height-1;for(;o>=0;){if(s=this.getItem(n,o),null===s){for(a=o;null===s&&a>=0;)s=this.getItem(n,a),a--;this.setItem(n,a+1,null),this.setItem(n,o,s),t.push({fromX:n,fromY:a+1,toX:n,toY:o})}o--}}const e=[];let r;for(let n=0;n<this.WH.width;n++){r=-1;for(let o=this.WH.height-1;o>=0;o--)if(null===this.getItem(n,o)){const s=b.M.getRandomInt(0,this.countCrystals);this.grid[n][o]=s,e.push({type:s,x:n,y:o,initY:r}),r--}}return{movedCrystals:t,newCrystals:e}}volatilization(t=!0){const e=[];for(let n=this.WH.height-1;n>=0;n--)for(let o=0;o<this.WH.width;o++)if(null!==this.grid[o][n]){const s=this.getFilledCell(o,n,this.grid[o][n]);s.length&&e.push(...s)}const r=[];return e.forEach(n=>{r.find(s=>s.x===n.x&&s.y===n.y)||(r.push(n),t&&(this.grid[n.x][n.y]=null))}),r}getFilledCell(t,e,r){const n=[],o=[],s=[],a=[];for(let u=t-1;u>=0&&this.grid[u]&&null!==this.grid[u][e]&&this.grid[u][e]===r;u--)n.push({x:u,y:e});for(let u=t+1;u<this.WH.width&&this.grid[u]&&null!==this.grid[u][e]&&this.grid[u][e]===r;u++)o.push({x:u,y:e});for(let u=e-1;u>=0&&null!==this.grid[t][u]&&this.grid[t][u]===r;u--)s.push({x:t,y:u});for(let u=e+1;u<this.WH.height&&null!==this.grid[t][u]&&this.grid[t][u]===r;u++)a.push({x:t,y:u});const l=[];return n.length+o.length>1&&(l.push(...n),l.push(...o)),s.length+a.length>1&&(l.push(...s),l.push(...a)),l.length&&l.push({x:t,y:e}),l}}var g=(()=>{return(i=g||(g={}))[i.NONE=0]="NONE",i[i.READY=1]="READY",i[i.VOLATILIZATION=2]="VOLATILIZATION",i[i.FALLING=3]="FALLING",i[i.SWAPING=4]="SWAPING",g;var i})();class je extends c.W20{constructor(t,e){super(),this.WH=t,this.crystalsInfo=e,this.destroying=!1,this.score=new C.x,this.state=g.NONE,this.crystals=new Map,this.selectedCrystals=[],this.ngUnsubscribe=new C.x,this.score$=this.score.asObservable(),this.fieldGrid=new Fe(this.WH),this.addChild((new c.TCu).beginFill(0,0).drawRect(0,0,this.WH.width*h,this.WH.height*h).endFill())}get isState(){return this.state}onDestroy(){this.ngUnsubscribe.next(),this.ngUnsubscribe.complete()}clearField(){return new fe.y(t=>{this.state=g.NONE,this.crystals.forEach(e=>{e.fadeOut()}),(0,Se.F)(100).pipe((0,we.o)(e=>this.busyCrystals>0&&e<1e3),(0,Oe.x)(()=>{t.next(),t.complete()})).subscribe(()=>{})})}initField(t){this.fieldGrid.generateGrid(t),this.state=g.FALLING,this.busyCrystals=this.WH.height*this.WH.width;for(let e=this.WH.height-1;e>=0;e--)for(let r=0;r<this.WH.width;r++){const n=this.fieldGrid.getItem(r,e);this.createCrystal(r,e,n,32+r*h,32+-1*(this.WH.height-e)*h)}}update(t){this.crystals.forEach(e=>{e.update(t)})}stop(){this.state=g.NONE,this.crystals.forEach(t=>{t.fadeOut()})}createCrystal(t,e,r,n,o){const s=`${t}-${e}`;if(null===r)return;const a=new Te(t,e,r,this.crystalsInfo[r]);a.x=n,a.y=o,this.crystals.set(s,a),this.addChild(a),a.state=v.FALLING,a.selected$.pipe((0,T.R)(this.ngUnsubscribe)).subscribe(l=>{if(this.state===g.READY){const u=`${l.x}-${l.y}`;if(this.crystals.has(u)){const d=this.crystals.get(u);if(!d)return;0===this.selectedCrystals.length?d&&(this.selectedCrystals.push(d),d.pulse=!0):this.isEqualsCoords({x:this.selectedCrystals[0].gridX,y:this.selectedCrystals[0].gridY},{x:d.gridX,y:d.gridY})?(d.pulse=!1,this.selectedCrystals=[]):this.isNeighboringCoords({x:this.selectedCrystals[0].gridX,y:this.selectedCrystals[0].gridY},{x:d.gridX,y:d.gridY})&&(this.selectedCrystals[0].pulse=!1,this.selectedCrystals.push(d),this.swapCrystals())}}}),a.fell$.pipe((0,T.R)(this.ngUnsubscribe)).subscribe(l=>{this.crystals.has(`${l.x}-${l.y}`)&&(this.busyCrystals--,this.busyCrystals<=0&&(this.state===g.FALLING?this.volatilization():this.state===g.SWAPING&&(this.volatilization()||this.swapCrystals())))}),a.moved$.pipe((0,T.R)(this.ngUnsubscribe)).subscribe(()=>{this.busyCrystals--,this.busyCrystals<=0&&this.state===g.SWAPING&&(this.selectedCrystals.length?(this.volatilization()||this.swapCrystals(),this.selectedCrystals=[]):this.state=g.READY)}),a.destroyed$.pipe((0,Pe.P)()).subscribe(l=>{const u=`${l.x}-${l.y}`;this.crystals.has(u)&&(this.crystals.delete(u),this.busyCrystals--,this.busyCrystals<=0&&this.state===g.VOLATILIZATION&&this.fallCrystals())})}isEqualsCoords(t,e){return t.x===e.x&&t.y===e.y}isNeighboringCoords(t,e){return t.x-1===e.x&&t.y===e.y||t.x+1===e.x&&t.y===e.y||t.y-1===e.y&&t.x===e.x||t.y+1===e.y&&t.x===e.x}swapCrystals(){this.state=g.SWAPING,this.busyCrystals=2;const t=this.selectedCrystals[0],e=this.selectedCrystals[1];this.fieldGrid.setItem(e.gridX,e.gridY,t.typeCrystal),this.fieldGrid.setItem(t.gridX,t.gridY,e.typeCrystal);const r=`${t.gridX}-${t.gridY}`,n=`${e.gridX}-${e.gridY}`;this.crystals.delete(r),this.crystals.delete(n),this.crystals.set(r,e),this.crystals.set(n,t),t.moveTo(e.gridX,e.gridY),e.moveTo(t.gridX,t.gridY)}volatilization(){const t=this.fieldGrid.volatilization();return t.length?(this.state=g.VOLATILIZATION,this.busyCrystals=t.length,t.forEach(e=>{const r=`${e.x}-${e.y}`;if(this.crystals.has(r)){const n=this.crystals.get(r);n&&(n.fadeOut(),this.score.next(n.score),this.flashText(String(n.score),{color:n.color,duration:1e3,size:16,x:n.x,y:n.y}))}}),!0):(this.state=g.READY,!1)}flashText(t,e){const n=new c.Xz2(t,{align:"left",fontName:"pixel",fontSize:e&&e.size?e.size:64}),o=e&&e.duration?e.duration:1500;n.x=e&&e.x?e.x:(this.width-n.width)/2,n.y=e&&e.y?e.y:(this.height-n.height)/2,n.tint=e&&e.color?e.color:16777215,this.addChild(n),(!e||void 0===e.fly||e.fly)&&b.M.animate({draw:a=>{this.destroying||(n.y-=75*a,a>=1&&n.destroy())},duration:o,timing:b.d.back})}fallCrystals(){this.state=g.FALLING;const t=this.fieldGrid.fallCrystals();this.busyCrystals=t.newCrystals.length,t.movedCrystals.forEach(e=>{const r=`${e.fromX}-${e.fromY}`;if(this.crystals.has(r)){const n=`${e.toX}-${e.toY}`,o=this.crystals.get(r);o&&(o.gridX=e.toX,o.gridY=e.toY,this.crystals.delete(r),this.crystals.set(n,o),o.state=v.FALLING,this.busyCrystals++)}}),t.newCrystals.forEach(e=>{this.createCrystal(e.x,e.y,e.type,32+e.x*h,32+e.initY*h)})}}var f=p(5989),M=function(i,t){return(M=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e){var r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform float gamma;\nuniform float contrast;\nuniform float saturation;\nuniform float brightness;\nuniform float red;\nuniform float green;\nuniform float blue;\nuniform float alpha;\n\nvoid main(void)\n{\n    vec4 c = texture2D(uSampler, vTextureCoord);\n\n    if (c.a > 0.0) {\n        c.rgb /= c.a;\n\n        vec3 rgb = pow(c.rgb, vec3(1. / gamma));\n        rgb = mix(vec3(.5), mix(vec3(dot(vec3(.2125, .7154, .0721), rgb)), rgb, saturation), contrast);\n        rgb.r *= red;\n        rgb.g *= green;\n        rgb.b *= blue;\n        c.rgb = rgb * brightness;\n\n        c.rgb *= c.a;\n    }\n\n    gl_FragColor = c * alpha;\n}\n")||this;return r.gamma=1,r.saturation=1,r.contrast=1,r.brightness=1,r.red=1,r.green=1,r.blue=1,r.alpha=1,Object.assign(r,e),r}(function(i,t){function e(){this.constructor=i}M(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){this.uniforms.gamma=Math.max(this.gamma,1e-4),this.uniforms.saturation=this.saturation,this.uniforms.contrast=this.contrast,this.uniforms.brightness=this.brightness,this.uniforms.red=this.red,this.uniforms.green=this.green,this.uniforms.blue=this.blue,this.uniforms.alpha=this.alpha,e.applyFilter(this,r,n,o)}}(f.wn);var y=p(477),D=function(i,t){return(D=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)},F=function(i){function t(e,r,n){void 0===e&&(e=4),void 0===r&&(r=3),void 0===n&&(n=!1);var o=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",n?"\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform vec2 uOffset;\nuniform vec4 filterClamp;\n\nvoid main(void)\n{\n    vec4 color = vec4(0.0);\n\n    // Sample top left pixel\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));\n\n    // Sample top right pixel\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y), filterClamp.xy, filterClamp.zw));\n\n    // Sample bottom right pixel\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));\n\n    // Sample bottom left pixel\n    color += texture2D(uSampler, clamp(vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y), filterClamp.xy, filterClamp.zw));\n\n    // Average\n    color *= 0.25;\n\n    gl_FragColor = color;\n}\n":"\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform vec2 uOffset;\n\nvoid main(void)\n{\n    vec4 color = vec4(0.0);\n\n    // Sample top left pixel\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y + uOffset.y));\n\n    // Sample top right pixel\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y + uOffset.y));\n\n    // Sample bottom right pixel\n    color += texture2D(uSampler, vec2(vTextureCoord.x + uOffset.x, vTextureCoord.y - uOffset.y));\n\n    // Sample bottom left pixel\n    color += texture2D(uSampler, vec2(vTextureCoord.x - uOffset.x, vTextureCoord.y - uOffset.y));\n\n    // Average\n    color *= 0.25;\n\n    gl_FragColor = color;\n}")||this;return o._kernels=[],o._blur=4,o._quality=3,o.uniforms.uOffset=new Float32Array(2),o._pixelSize=new y.E9,o.pixelSize=1,o._clamp=n,Array.isArray(e)?o.kernels=e:(o._blur=e,o.quality=r),o}return function(i,t){function e(){this.constructor=i}D(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}(t,i),t.prototype.apply=function(e,r,n,o){var l,s=this._pixelSize.x/r._frame.width,a=this._pixelSize.y/r._frame.height;if(1===this._quality||0===this._blur)this.uniforms.uOffset[0]=(l=this._kernels[0]+.5)*s,this.uniforms.uOffset[1]=l*a,e.applyFilter(this,r,n,o);else{for(var u=e.getFilterTexture(),d=r,_=u,x=void 0,z=this._quality-1,P=0;P<z;P++)this.uniforms.uOffset[0]=(l=this._kernels[P]+.5)*s,this.uniforms.uOffset[1]=l*a,e.applyFilter(this,d,_,1),x=d,d=_,_=x;this.uniforms.uOffset[0]=(l=this._kernels[z]+.5)*s,this.uniforms.uOffset[1]=l*a,e.applyFilter(this,d,n,o),e.returnFilterTexture(u)}},t.prototype._updatePadding=function(){this.padding=Math.ceil(this._kernels.reduce(function(e,r){return e+r+.5},0))},t.prototype._generateKernels=function(){var e=this._blur,r=this._quality,n=[e];if(e>0)for(var o=e,s=e/r,a=1;a<r;a++)n.push(o-=s);this._kernels=n,this._updatePadding()},Object.defineProperty(t.prototype,"kernels",{get:function(){return this._kernels},set:function(e){Array.isArray(e)&&e.length>0?(this._kernels=e,this._quality=e.length,this._blur=Math.max.apply(Math,e)):(this._kernels=[0],this._quality=1)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"clamp",{get:function(){return this._clamp},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"pixelSize",{get:function(){return this._pixelSize},set:function(e){"number"==typeof e?(this._pixelSize.x=e,this._pixelSize.y=e):Array.isArray(e)?(this._pixelSize.x=e[0],this._pixelSize.y=e[1]):e instanceof y.E9?(this._pixelSize.x=e.x,this._pixelSize.y=e.y):(this._pixelSize.x=1,this._pixelSize.y=1)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"quality",{get:function(){return this._quality},set:function(e){this._quality=Math.max(1,Math.round(e)),this._generateKernels()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"blur",{get:function(){return this._blur},set:function(e){this._blur=e,this._generateKernels()},enumerable:!1,configurable:!0}),t}(f.wn),O=p(5593),E=function(i,t){return(E=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};function he(i,t){function e(){this.constructor=i}E(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}var de="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",Re=function(i){function t(e){void 0===e&&(e=.5);var r=i.call(this,de,"\nuniform sampler2D uSampler;\nvarying vec2 vTextureCoord;\n\nuniform float threshold;\n\nvoid main() {\n    vec4 color = texture2D(uSampler, vTextureCoord);\n\n    // A simple & fast algorithm for getting brightness.\n    // It's inaccuracy , but good enought for this feature.\n    float _max = max(max(color.r, color.g), color.b);\n    float _min = min(min(color.r, color.g), color.b);\n    float brightness = (_max + _min) * 0.5;\n\n    if(brightness > threshold) {\n        gl_FragColor = color;\n    } else {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    }\n}\n")||this;return r.threshold=e,r}return he(t,i),Object.defineProperty(t.prototype,"threshold",{get:function(){return this.uniforms.threshold},set:function(e){this.uniforms.threshold=e},enumerable:!1,configurable:!0}),t}(f.wn),I=(function(i){function t(e){var r=i.call(this,de,"uniform sampler2D uSampler;\nvarying vec2 vTextureCoord;\n\nuniform sampler2D bloomTexture;\nuniform float bloomScale;\nuniform float brightness;\n\nvoid main() {\n    vec4 color = texture2D(uSampler, vTextureCoord);\n    color.rgb *= brightness;\n    vec4 bloomColor = vec4(texture2D(bloomTexture, vTextureCoord).rgb, 0.0);\n    bloomColor.rgb *= bloomScale;\n    gl_FragColor = color + bloomColor;\n}\n")||this;r.bloomScale=1,r.brightness=1,r._resolution=O.X.FILTER_RESOLUTION,"number"==typeof e&&(e={threshold:e});var n=Object.assign(t.defaults,e);r.bloomScale=n.bloomScale,r.brightness=n.brightness;var o=n.kernels,s=n.blur,a=n.quality,l=n.pixelSize,u=n.resolution;return r._extractFilter=new Re(n.threshold),r._extractFilter.resolution=u,r._blurFilter=o?new F(o):new F(s,a),r.pixelSize=l,r.resolution=u,r}he(t,i),t.prototype.apply=function(e,r,n,o,s){var a=e.getFilterTexture();this._extractFilter.apply(e,r,a,1,s);var l=e.getFilterTexture();this._blurFilter.apply(e,a,l,1),this.uniforms.bloomScale=this.bloomScale,this.uniforms.brightness=this.brightness,this.uniforms.bloomTexture=l,e.applyFilter(this,r,n,o),e.returnFilterTexture(l),e.returnFilterTexture(a)},Object.defineProperty(t.prototype,"resolution",{get:function(){return this._resolution},set:function(e){this._resolution=e,this._extractFilter&&(this._extractFilter.resolution=e),this._blurFilter&&(this._blurFilter.resolution=e)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"threshold",{get:function(){return this._extractFilter.threshold},set:function(e){this._extractFilter.threshold=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"kernels",{get:function(){return this._blurFilter.kernels},set:function(e){this._blurFilter.kernels=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"blur",{get:function(){return this._blurFilter.blur},set:function(e){this._blurFilter.blur=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"quality",{get:function(){return this._blurFilter.quality},set:function(e){this._blurFilter.quality=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"pixelSize",{get:function(){return this._blurFilter.pixelSize},set:function(e){this._blurFilter.pixelSize=e},enumerable:!1,configurable:!0}),t.defaults={threshold:.5,bloomScale:1,brightness:1,kernels:null,blur:8,quality:4,pixelSize:1,resolution:O.X.FILTER_RESOLUTION}}(f.wn),function(i,t){return(I=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)});!function(i){function t(e){void 0===e&&(e=8);var r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\n\nuniform vec4 filterArea;\nuniform float pixelSize;\nuniform sampler2D uSampler;\n\nvec2 mapCoord( vec2 coord )\n{\n    coord *= filterArea.xy;\n    coord += filterArea.zw;\n\n    return coord;\n}\n\nvec2 unmapCoord( vec2 coord )\n{\n    coord -= filterArea.zw;\n    coord /= filterArea.xy;\n\n    return coord;\n}\n\nvec2 pixelate(vec2 coord, vec2 size)\n{\n    return floor( coord / size ) * size;\n}\n\nvec2 getMod(vec2 coord, vec2 size)\n{\n    return mod( coord , size) / size;\n}\n\nfloat character(float n, vec2 p)\n{\n    p = floor(p*vec2(4.0, -4.0) + 2.5);\n\n    if (clamp(p.x, 0.0, 4.0) == p.x)\n    {\n        if (clamp(p.y, 0.0, 4.0) == p.y)\n        {\n            if (int(mod(n/exp2(p.x + 5.0*p.y), 2.0)) == 1) return 1.0;\n        }\n    }\n    return 0.0;\n}\n\nvoid main()\n{\n    vec2 coord = mapCoord(vTextureCoord);\n\n    // get the rounded color..\n    vec2 pixCoord = pixelate(coord, vec2(pixelSize));\n    pixCoord = unmapCoord(pixCoord);\n\n    vec4 color = texture2D(uSampler, pixCoord);\n\n    // determine the character to use\n    float gray = (color.r + color.g + color.b) / 3.0;\n\n    float n =  65536.0;             // .\n    if (gray > 0.2) n = 65600.0;    // :\n    if (gray > 0.3) n = 332772.0;   // *\n    if (gray > 0.4) n = 15255086.0; // o\n    if (gray > 0.5) n = 23385164.0; // &\n    if (gray > 0.6) n = 15252014.0; // 8\n    if (gray > 0.7) n = 13199452.0; // @\n    if (gray > 0.8) n = 11512810.0; // #\n\n    // get the mod..\n    vec2 modd = getMod(coord, vec2(pixelSize));\n\n    gl_FragColor = color * character( n, vec2(-1.0) + modd * 2.0);\n\n}\n")||this;return r.size=e,r}(function(i,t){function e(){this.constructor=i}I(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),Object.defineProperty(t.prototype,"size",{get:function(){return this.uniforms.pixelSize},set:function(e){this.uniforms.pixelSize=e},enumerable:!1,configurable:!0})}(f.wn);var m=p(7567),L=function(i,t){return(L=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e){var r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","precision mediump float;\n\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\n\nuniform float transformX;\nuniform float transformY;\nuniform vec3 lightColor;\nuniform float lightAlpha;\nuniform vec3 shadowColor;\nuniform float shadowAlpha;\n\nvoid main(void) {\n    vec2 transform = vec2(1.0 / filterArea) * vec2(transformX, transformY);\n    vec4 color = texture2D(uSampler, vTextureCoord);\n    float light = texture2D(uSampler, vTextureCoord - transform).a;\n    float shadow = texture2D(uSampler, vTextureCoord + transform).a;\n\n    color.rgb = mix(color.rgb, lightColor, clamp((color.a - light) * lightAlpha, 0.0, 1.0));\n    color.rgb = mix(color.rgb, shadowColor, clamp((color.a - shadow) * shadowAlpha, 0.0, 1.0));\n    gl_FragColor = vec4(color.rgb * color.a, color.a);\n}\n")||this;return r._thickness=2,r._angle=0,r.uniforms.lightColor=new Float32Array(3),r.uniforms.shadowColor=new Float32Array(3),Object.assign(r,{rotation:45,thickness:2,lightColor:16777215,lightAlpha:.7,shadowColor:0,shadowAlpha:.7},e),r.padding=1,r}(function(i,t){function e(){this.constructor=i}L(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype._updateTransform=function(){this.uniforms.transformX=this._thickness*Math.cos(this._angle),this.uniforms.transformY=this._thickness*Math.sin(this._angle)},Object.defineProperty(t.prototype,"rotation",{get:function(){return this._angle/y.ZX},set:function(e){this._angle=e*y.ZX,this._updateTransform()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"thickness",{get:function(){return this._thickness},set:function(e){this._thickness=e,this._updateTransform()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lightColor",{get:function(){return(0,m.CO)(this.uniforms.lightColor)},set:function(e){(0,m.wK)(e,this.uniforms.lightColor)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lightAlpha",{get:function(){return this.uniforms.lightAlpha},set:function(e){this.uniforms.lightAlpha=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"shadowColor",{get:function(){return(0,m.CO)(this.uniforms.shadowColor)},set:function(e){(0,m.wK)(e,this.uniforms.shadowColor)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"shadowAlpha",{get:function(){return this.uniforms.shadowAlpha},set:function(e){this.uniforms.shadowAlpha=e},enumerable:!1,configurable:!0})}(f.wn);var S=p(6617),Ue=p(4865),pe=p(1275),k=function(i,t){return(k=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e,r,n,o){void 0===e&&(e=2),void 0===r&&(r=4),void 0===n&&(n=O.X.FILTER_RESOLUTION),void 0===o&&(o=5);var a,l,s=i.call(this)||this;return"number"==typeof e?(a=e,l=e):e instanceof y.E9?(a=e.x,l=e.y):Array.isArray(e)&&(a=e[0],l=e[1]),s.blurXFilter=new pe.Y(!0,a,r,n,o),s.blurYFilter=new pe.Y(!1,l,r,n,o),s.blurYFilter.blendMode=S.T$.SCREEN,s.defaultFilter=new Ue.U,s}(function(i,t){function e(){this.constructor=i}k(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){var s=e.getFilterTexture();this.defaultFilter.apply(e,r,n,o),this.blurXFilter.apply(e,r,s,1),this.blurYFilter.apply(e,s,n,0),e.returnFilterTexture(s)},Object.defineProperty(t.prototype,"blur",{get:function(){return this.blurXFilter.blur},set:function(e){this.blurXFilter.blur=this.blurYFilter.blur=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"blurX",{get:function(){return this.blurXFilter.blur},set:function(e){this.blurXFilter.blur=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"blurY",{get:function(){return this.blurYFilter.blur},set:function(e){this.blurYFilter.blur=e},enumerable:!1,configurable:!0})}(f.wn);var R=function(i,t){return(R=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e){var r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","uniform float radius;\nuniform float strength;\nuniform vec2 center;\nuniform sampler2D uSampler;\nvarying vec2 vTextureCoord;\n\nuniform vec4 filterArea;\nuniform vec4 filterClamp;\nuniform vec2 dimensions;\n\nvoid main()\n{\n    vec2 coord = vTextureCoord * filterArea.xy;\n    coord -= center * dimensions.xy;\n    float distance = length(coord);\n    if (distance < radius) {\n        float percent = distance / radius;\n        if (strength > 0.0) {\n            coord *= mix(1.0, smoothstep(0.0, radius / distance, percent), strength * 0.75);\n        } else {\n            coord *= mix(1.0, pow(percent, 1.0 + strength * 0.75) * radius / distance, 1.0 - percent);\n        }\n    }\n    coord += center * dimensions.xy;\n    coord /= filterArea.xy;\n    vec2 clampedCoord = clamp(coord, filterClamp.xy, filterClamp.zw);\n    vec4 color = texture2D(uSampler, clampedCoord);\n    if (coord != clampedCoord) {\n        color *= max(0.0, 1.0 - length(coord - clampedCoord));\n    }\n\n    gl_FragColor = color;\n}\n")||this;return r.uniforms.dimensions=new Float32Array(2),Object.assign(r,t.defaults,e),r}(function(i,t){function e(){this.constructor=i}R(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){var s=r.filterFrame,l=s.height;this.uniforms.dimensions[0]=s.width,this.uniforms.dimensions[1]=l,e.applyFilter(this,r,n,o)},Object.defineProperty(t.prototype,"radius",{get:function(){return this.uniforms.radius},set:function(e){this.uniforms.radius=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"strength",{get:function(){return this.uniforms.strength},set:function(e){this.uniforms.strength=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"center",{get:function(){return this.uniforms.center},set:function(e){this.uniforms.center=e},enumerable:!1,configurable:!0}),t.defaults={center:[.5,.5],radius:100,strength:1}}(f.wn);var W=function(i,t){return(W=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e,r,n){void 0===r&&(r=!1),void 0===n&&(n=1);var o=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform sampler2D colorMap;\nuniform float _mix;\nuniform float _size;\nuniform float _sliceSize;\nuniform float _slicePixelSize;\nuniform float _sliceInnerSize;\nvoid main() {\n    vec4 color = texture2D(uSampler, vTextureCoord.xy);\n\n    vec4 adjusted;\n    if (color.a > 0.0) {\n        color.rgb /= color.a;\n        float innerWidth = _size - 1.0;\n        float zSlice0 = min(floor(color.b * innerWidth), innerWidth);\n        float zSlice1 = min(zSlice0 + 1.0, innerWidth);\n        float xOffset = _slicePixelSize * 0.5 + color.r * _sliceInnerSize;\n        float s0 = xOffset + (zSlice0 * _sliceSize);\n        float s1 = xOffset + (zSlice1 * _sliceSize);\n        float yOffset = _sliceSize * 0.5 + color.g * (1.0 - _sliceSize);\n        vec4 slice0Color = texture2D(colorMap, vec2(s0,yOffset));\n        vec4 slice1Color = texture2D(colorMap, vec2(s1,yOffset));\n        float zOffset = fract(color.b * innerWidth);\n        adjusted = mix(slice0Color, slice1Color, zOffset);\n\n        color.rgb *= color.a;\n    }\n    gl_FragColor = vec4(mix(color, adjusted, _mix).rgb, color.a);\n\n}")||this;return o.mix=1,o._size=0,o._sliceSize=0,o._slicePixelSize=0,o._sliceInnerSize=0,o._nearest=!1,o._scaleMode=null,o._colorMap=null,o._scaleMode=null,o.nearest=r,o.mix=n,o.colorMap=e,o}(function(i,t){function e(){this.constructor=i}W(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){this.uniforms._mix=this.mix,e.applyFilter(this,r,n,o)},Object.defineProperty(t.prototype,"colorSize",{get:function(){return this._size},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"colorMap",{get:function(){return this._colorMap},set:function(e){var r;!e||(e instanceof f.xE||(e=f.xE.from(e)),(null===(r=e)||void 0===r?void 0:r.baseTexture)&&(e.baseTexture.scaleMode=this._scaleMode,e.baseTexture.mipmap=S.WB.OFF,this._size=e.height,this._sliceSize=1/this._size,this._slicePixelSize=this._sliceSize/this._size,this._sliceInnerSize=this._slicePixelSize*(this._size-1),this.uniforms._size=this._size,this.uniforms._sliceSize=this._sliceSize,this.uniforms._slicePixelSize=this._slicePixelSize,this.uniforms._sliceInnerSize=this._sliceInnerSize,this.uniforms.colorMap=e),this._colorMap=e)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"nearest",{get:function(){return this._nearest},set:function(e){this._nearest=e,this._scaleMode=e?S.aH.NEAREST:S.aH.LINEAR;var r=this._colorMap;r&&r.baseTexture&&(r.baseTexture._glTextures={},r.baseTexture.scaleMode=this._scaleMode,r.baseTexture.mipmap=S.WB.OFF,r._updateID++,r.baseTexture.emit("update",r.baseTexture))},enumerable:!1,configurable:!0}),t.prototype.updateColorMap=function(){var e=this._colorMap;e&&e.baseTexture&&(e._updateID++,e.baseTexture.emit("update",e.baseTexture),this.colorMap=e)},t.prototype.destroy=function(e){void 0===e&&(e=!1),this._colorMap&&this._colorMap.destroy(e),i.prototype.destroy.call(this)}}(f.wn);var N=function(i,t){return(N=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e,r){void 0===e&&(e=0),void 0===r&&(r=1);var n=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec3 color;\nuniform float alpha;\n\nvoid main(void) {\n    vec4 currentColor = texture2D(uSampler, vTextureCoord);\n    gl_FragColor = vec4(mix(currentColor.rgb, color.rgb, currentColor.a * alpha), currentColor.a);\n}\n")||this;return n._color=0,n._alpha=1,n.uniforms.color=new Float32Array(3),n.color=e,n.alpha=r,n}(function(i,t){function e(){this.constructor=i}N(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),Object.defineProperty(t.prototype,"color",{get:function(){return this._color},set:function(e){var r=this.uniforms.color;"number"==typeof e?((0,m.wK)(e,r),this._color=e):(r[0]=e[0],r[1]=e[1],r[2]=e[2],this._color=(0,m.CO)(r))},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"alpha",{get:function(){return this._alpha},set:function(e){this.uniforms.alpha=e,this._alpha=e},enumerable:!1,configurable:!0})}(f.wn);var V=function(i,t){return(V=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e,r,n){void 0===e&&(e=16711680),void 0===r&&(r=0),void 0===n&&(n=.4);var o=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec3 originalColor;\nuniform vec3 newColor;\nuniform float epsilon;\nvoid main(void) {\n    vec4 currentColor = texture2D(uSampler, vTextureCoord);\n    vec3 colorDiff = originalColor - (currentColor.rgb / max(currentColor.a, 0.0000000001));\n    float colorDistance = length(colorDiff);\n    float doReplace = step(colorDistance, epsilon);\n    gl_FragColor = vec4(mix(currentColor.rgb, (newColor + colorDiff) * currentColor.a, doReplace), currentColor.a);\n}\n")||this;return o._originalColor=16711680,o._newColor=0,o.uniforms.originalColor=new Float32Array(3),o.uniforms.newColor=new Float32Array(3),o.originalColor=e,o.newColor=r,o.epsilon=n,o}(function(i,t){function e(){this.constructor=i}V(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),Object.defineProperty(t.prototype,"originalColor",{get:function(){return this._originalColor},set:function(e){var r=this.uniforms.originalColor;"number"==typeof e?((0,m.wK)(e,r),this._originalColor=e):(r[0]=e[0],r[1]=e[1],r[2]=e[2],this._originalColor=(0,m.CO)(r))},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"newColor",{get:function(){return this._newColor},set:function(e){var r=this.uniforms.newColor;"number"==typeof e?((0,m.wK)(e,r),this._newColor=e):(r[0]=e[0],r[1]=e[1],r[2]=e[2],this._newColor=(0,m.CO)(r))},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"epsilon",{get:function(){return this.uniforms.epsilon},set:function(e){this.uniforms.epsilon=e},enumerable:!1,configurable:!0})}(f.wn);var X=function(i,t){return(X=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e,r,n){void 0===r&&(r=200),void 0===n&&(n=200);var o=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","precision mediump float;\n\nvarying mediump vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform vec2 texelSize;\nuniform float matrix[9];\n\nvoid main(void)\n{\n   vec4 c11 = texture2D(uSampler, vTextureCoord - texelSize); // top left\n   vec4 c12 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - texelSize.y)); // top center\n   vec4 c13 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y - texelSize.y)); // top right\n\n   vec4 c21 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y)); // mid left\n   vec4 c22 = texture2D(uSampler, vTextureCoord); // mid center\n   vec4 c23 = texture2D(uSampler, vec2(vTextureCoord.x + texelSize.x, vTextureCoord.y)); // mid right\n\n   vec4 c31 = texture2D(uSampler, vec2(vTextureCoord.x - texelSize.x, vTextureCoord.y + texelSize.y)); // bottom left\n   vec4 c32 = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + texelSize.y)); // bottom center\n   vec4 c33 = texture2D(uSampler, vTextureCoord + texelSize); // bottom right\n\n   gl_FragColor =\n       c11 * matrix[0] + c12 * matrix[1] + c13 * matrix[2] +\n       c21 * matrix[3] + c22 * matrix[4] + c23 * matrix[5] +\n       c31 * matrix[6] + c32 * matrix[7] + c33 * matrix[8];\n\n   gl_FragColor.a = c22.a;\n}\n")||this;return o.uniforms.texelSize=new Float32Array(2),o.uniforms.matrix=new Float32Array(9),void 0!==e&&(o.matrix=e),o.width=r,o.height=n,o}(function(i,t){function e(){this.constructor=i}X(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),Object.defineProperty(t.prototype,"matrix",{get:function(){return this.uniforms.matrix},set:function(e){var r=this;e.forEach(function(n,o){r.uniforms.matrix[o]=n})},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"width",{get:function(){return 1/this.uniforms.texelSize[0]},set:function(e){this.uniforms.texelSize[0]=1/e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"height",{get:function(){return 1/this.uniforms.texelSize[1]},set:function(e){this.uniforms.texelSize[1]=1/e},enumerable:!1,configurable:!0})}(f.wn);var i,B=function(i,t){return(B=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};(function(i,t){function e(){this.constructor=i}B(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(function(){return i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\n\nvoid main(void)\n{\n    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);\n\n    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n\n    if (lum < 1.00)\n    {\n        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0)\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n\n    if (lum < 0.75)\n    {\n        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0)\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n\n    if (lum < 0.50)\n    {\n        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0)\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n\n    if (lum < 0.3)\n    {\n        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0)\n        {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n}\n")||this},i=f.wn);var G=function(i,t){return(G=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e){var r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform vec4 filterArea;\nuniform vec2 dimensions;\n\nconst float SQRT_2 = 1.414213;\n\nconst float light = 1.0;\n\nuniform float curvature;\nuniform float lineWidth;\nuniform float lineContrast;\nuniform bool verticalLine;\nuniform float noise;\nuniform float noiseSize;\n\nuniform float vignetting;\nuniform float vignettingAlpha;\nuniform float vignettingBlur;\n\nuniform float seed;\nuniform float time;\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid main(void)\n{\n    vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\n    vec2 dir = vec2(vTextureCoord.xy - vec2(0.5, 0.5)) * filterArea.xy / dimensions;\n\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\n    vec3 rgb = gl_FragColor.rgb;\n\n    if (noise > 0.0 && noiseSize > 0.0)\n    {\n        pixelCoord.x = floor(pixelCoord.x / noiseSize);\n        pixelCoord.y = floor(pixelCoord.y / noiseSize);\n        float _noise = rand(pixelCoord * noiseSize * seed) - 0.5;\n        rgb += _noise * noise;\n    }\n\n    if (lineWidth > 0.0)\n    {\n        float _c = curvature > 0. ? curvature : 1.;\n        float k = curvature > 0. ?(length(dir * dir) * 0.25 * _c * _c + 0.935 * _c) : 1.;\n        vec2 uv = dir * k;\n\n        float v = (verticalLine ? uv.x * dimensions.x : uv.y * dimensions.y) * min(1.0, 2.0 / lineWidth ) / _c;\n        float j = 1. + cos(v * 1.2 - time) * 0.5 * lineContrast;\n        rgb *= j;\n        float segment = verticalLine ? mod((dir.x + .5) * dimensions.x, 4.) : mod((dir.y + .5) * dimensions.y, 4.);\n        rgb *= 0.99 + ceil(segment) * 0.015;\n    }\n\n    if (vignetting > 0.0)\n    {\n        float outter = SQRT_2 - vignetting * SQRT_2;\n        float darker = clamp((outter - length(dir) * SQRT_2) / ( 0.00001 + vignettingBlur * SQRT_2), 0.0, 1.0);\n        rgb *= darker + (1.0 - darker) * (1.0 - vignettingAlpha);\n    }\n\n    gl_FragColor.rgb = rgb;\n}\n")||this;return r.time=0,r.seed=0,r.uniforms.dimensions=new Float32Array(2),Object.assign(r,t.defaults,e),r}(function(i,t){function e(){this.constructor=i}G(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){var s=r.filterFrame,l=s.height;this.uniforms.dimensions[0]=s.width,this.uniforms.dimensions[1]=l,this.uniforms.seed=this.seed,this.uniforms.time=this.time,e.applyFilter(this,r,n,o)},Object.defineProperty(t.prototype,"curvature",{get:function(){return this.uniforms.curvature},set:function(e){this.uniforms.curvature=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lineWidth",{get:function(){return this.uniforms.lineWidth},set:function(e){this.uniforms.lineWidth=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lineContrast",{get:function(){return this.uniforms.lineContrast},set:function(e){this.uniforms.lineContrast=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"verticalLine",{get:function(){return this.uniforms.verticalLine},set:function(e){this.uniforms.verticalLine=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"noise",{get:function(){return this.uniforms.noise},set:function(e){this.uniforms.noise=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"noiseSize",{get:function(){return this.uniforms.noiseSize},set:function(e){this.uniforms.noiseSize=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"vignetting",{get:function(){return this.uniforms.vignetting},set:function(e){this.uniforms.vignetting=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"vignettingAlpha",{get:function(){return this.uniforms.vignettingAlpha},set:function(e){this.uniforms.vignettingAlpha=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"vignettingBlur",{get:function(){return this.uniforms.vignettingBlur},set:function(e){this.uniforms.vignettingBlur=e},enumerable:!1,configurable:!0}),t.defaults={curvature:1,lineWidth:1,lineContrast:.25,verticalLine:!1,noise:0,noiseSize:1,seed:0,vignetting:.3,vignettingAlpha:1,vignettingBlur:.3,time:0}}(f.wn);var Y=function(i,t){return(Y=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e,r){void 0===e&&(e=1),void 0===r&&(r=5);var n=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","precision mediump float;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform vec4 filterArea;\nuniform sampler2D uSampler;\n\nuniform float angle;\nuniform float scale;\n\nfloat pattern()\n{\n   float s = sin(angle), c = cos(angle);\n   vec2 tex = vTextureCoord * filterArea.xy;\n   vec2 point = vec2(\n       c * tex.x - s * tex.y,\n       s * tex.x + c * tex.y\n   ) * scale;\n   return (sin(point.x) * sin(point.y)) * 4.0;\n}\n\nvoid main()\n{\n   vec4 color = texture2D(uSampler, vTextureCoord);\n   float average = (color.r + color.g + color.b) / 3.0;\n   gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);\n}\n")||this;return n.scale=e,n.angle=r,n}(function(i,t){function e(){this.constructor=i}Y(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),Object.defineProperty(t.prototype,"scale",{get:function(){return this.uniforms.scale},set:function(e){this.uniforms.scale=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"angle",{get:function(){return this.uniforms.angle},set:function(e){this.uniforms.angle=e},enumerable:!1,configurable:!0})}(f.wn);var U=function(i,t){return(U=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)},j=function(){return j=Object.assign||function(t){for(var r,e=arguments,n=1,o=arguments.length;n<o;n++)for(var s in r=e[n])Object.prototype.hasOwnProperty.call(r,s)&&(t[s]=r[s]);return t},j.apply(this,arguments)},K=(function(i){function t(e){var r=i.call(this)||this;r.angle=45,r._distance=5,r._resolution=O.X.FILTER_RESOLUTION;var n=e?j(j({},t.defaults),e):t.defaults,o=n.kernels,s=n.blur,a=n.quality,l=n.pixelSize,u=n.resolution;r._tintFilter=new f.wn("attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform float alpha;\nuniform vec3 color;\n\nuniform vec2 shift;\nuniform vec4 inputSize;\n\nvoid main(void){\n    vec4 sample = texture2D(uSampler, vTextureCoord - shift * inputSize.zw);\n\n    // Premultiply alpha\n    sample.rgb = color.rgb * sample.a;\n\n    // alpha user alpha\n    sample *= alpha;\n\n    gl_FragColor = sample;\n}"),r._tintFilter.uniforms.color=new Float32Array(4),r._tintFilter.uniforms.shift=new y.E9,r._tintFilter.resolution=u,r._blurFilter=o?new F(o):new F(s,a),r.pixelSize=l,r.resolution=u;var _=n.rotation,x=n.distance,z=n.alpha,P=n.color;return r.shadowOnly=n.shadowOnly,r.rotation=_,r.distance=x,r.alpha=z,r.color=P,r._updatePadding(),r}(function(i,t){function e(){this.constructor=i}U(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){var s=e.getFilterTexture();this._tintFilter.apply(e,r,s,1),this._blurFilter.apply(e,s,n,o),!0!==this.shadowOnly&&e.applyFilter(this,r,n,0),e.returnFilterTexture(s)},t.prototype._updatePadding=function(){this.padding=this.distance+2*this.blur},t.prototype._updateShift=function(){this._tintFilter.uniforms.shift.set(this.distance*Math.cos(this.angle),this.distance*Math.sin(this.angle))},Object.defineProperty(t.prototype,"resolution",{get:function(){return this._resolution},set:function(e){this._resolution=e,this._tintFilter&&(this._tintFilter.resolution=e),this._blurFilter&&(this._blurFilter.resolution=e)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"distance",{get:function(){return this._distance},set:function(e){this._distance=e,this._updatePadding(),this._updateShift()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"rotation",{get:function(){return this.angle/y.ZX},set:function(e){this.angle=e*y.ZX,this._updateShift()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"alpha",{get:function(){return this._tintFilter.uniforms.alpha},set:function(e){this._tintFilter.uniforms.alpha=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"color",{get:function(){return(0,m.CO)(this._tintFilter.uniforms.color)},set:function(e){(0,m.wK)(e,this._tintFilter.uniforms.color)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"kernels",{get:function(){return this._blurFilter.kernels},set:function(e){this._blurFilter.kernels=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"blur",{get:function(){return this._blurFilter.blur},set:function(e){this._blurFilter.blur=e,this._updatePadding()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"quality",{get:function(){return this._blurFilter.quality},set:function(e){this._blurFilter.quality=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"pixelSize",{get:function(){return this._blurFilter.pixelSize},set:function(e){this._blurFilter.pixelSize=e},enumerable:!1,configurable:!0}),t.defaults={rotation:45,distance:5,color:0,alpha:.5,shadowOnly:!1,kernels:null,blur:2,quality:3,pixelSize:1,resolution:O.X.FILTER_RESOLUTION}}(f.wn),function(i,t){return(K=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)});!function(i){function t(e){void 0===e&&(e=5);var r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float strength;\nuniform vec4 filterArea;\n\n\nvoid main(void)\n{\n\tvec2 onePixel = vec2(1.0 / filterArea);\n\n\tvec4 color;\n\n\tcolor.rgb = vec3(0.5);\n\n\tcolor -= texture2D(uSampler, vTextureCoord - onePixel) * strength;\n\tcolor += texture2D(uSampler, vTextureCoord + onePixel) * strength;\n\n\tcolor.rgb = vec3((color.r + color.g + color.b) / 3.0);\n\n\tfloat alpha = texture2D(uSampler, vTextureCoord).a;\n\n\tgl_FragColor = vec4(color.rgb * alpha, alpha);\n}\n")||this;return r.strength=e,r}(function(i,t){function e(){this.constructor=i}K(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),Object.defineProperty(t.prototype,"strength",{get:function(){return this.uniforms.strength},set:function(e){this.uniforms.strength=e},enumerable:!1,configurable:!0})}(f.wn);var Z=function(i,t){return(Z=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e){var r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","// precision highp float;\n\nvarying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform vec4 filterArea;\nuniform vec4 filterClamp;\nuniform vec2 dimensions;\nuniform float aspect;\n\nuniform sampler2D displacementMap;\nuniform float offset;\nuniform float sinDir;\nuniform float cosDir;\nuniform int fillMode;\n\nuniform float seed;\nuniform vec2 red;\nuniform vec2 green;\nuniform vec2 blue;\n\nconst int TRANSPARENT = 0;\nconst int ORIGINAL = 1;\nconst int LOOP = 2;\nconst int CLAMP = 3;\nconst int MIRROR = 4;\n\nvoid main(void)\n{\n    vec2 coord = (vTextureCoord * filterArea.xy) / dimensions;\n\n    if (coord.x > 1.0 || coord.y > 1.0) {\n        return;\n    }\n\n    float cx = coord.x - 0.5;\n    float cy = (coord.y - 0.5) * aspect;\n    float ny = (-sinDir * cx + cosDir * cy) / aspect + 0.5;\n\n    // displacementMap: repeat\n    // ny = ny > 1.0 ? ny - 1.0 : (ny < 0.0 ? 1.0 + ny : ny);\n\n    // displacementMap: mirror\n    ny = ny > 1.0 ? 2.0 - ny : (ny < 0.0 ? -ny : ny);\n\n    vec4 dc = texture2D(displacementMap, vec2(0.5, ny));\n\n    float displacement = (dc.r - dc.g) * (offset / filterArea.x);\n\n    coord = vTextureCoord + vec2(cosDir * displacement, sinDir * displacement * aspect);\n\n    if (fillMode == CLAMP) {\n        coord = clamp(coord, filterClamp.xy, filterClamp.zw);\n    } else {\n        if( coord.x > filterClamp.z ) {\n            if (fillMode == TRANSPARENT) {\n                discard;\n            } else if (fillMode == LOOP) {\n                coord.x -= filterClamp.z;\n            } else if (fillMode == MIRROR) {\n                coord.x = filterClamp.z * 2.0 - coord.x;\n            }\n        } else if( coord.x < filterClamp.x ) {\n            if (fillMode == TRANSPARENT) {\n                discard;\n            } else if (fillMode == LOOP) {\n                coord.x += filterClamp.z;\n            } else if (fillMode == MIRROR) {\n                coord.x *= -filterClamp.z;\n            }\n        }\n\n        if( coord.y > filterClamp.w ) {\n            if (fillMode == TRANSPARENT) {\n                discard;\n            } else if (fillMode == LOOP) {\n                coord.y -= filterClamp.w;\n            } else if (fillMode == MIRROR) {\n                coord.y = filterClamp.w * 2.0 - coord.y;\n            }\n        } else if( coord.y < filterClamp.y ) {\n            if (fillMode == TRANSPARENT) {\n                discard;\n            } else if (fillMode == LOOP) {\n                coord.y += filterClamp.w;\n            } else if (fillMode == MIRROR) {\n                coord.y *= -filterClamp.w;\n            }\n        }\n    }\n\n    gl_FragColor.r = texture2D(uSampler, coord + red * (1.0 - seed * 0.4) / filterArea.xy).r;\n    gl_FragColor.g = texture2D(uSampler, coord + green * (1.0 - seed * 0.3) / filterArea.xy).g;\n    gl_FragColor.b = texture2D(uSampler, coord + blue * (1.0 - seed * 0.2) / filterArea.xy).b;\n    gl_FragColor.a = texture2D(uSampler, coord).a;\n}\n")||this;return r.offset=100,r.fillMode=t.TRANSPARENT,r.average=!1,r.seed=0,r.minSize=8,r.sampleSize=512,r._slices=0,r._offsets=new Float32Array(1),r._sizes=new Float32Array(1),r._direction=-1,r.uniforms.dimensions=new Float32Array(2),r._canvas=document.createElement("canvas"),r._canvas.width=4,r._canvas.height=r.sampleSize,r.texture=f.xE.from(r._canvas,{scaleMode:S.aH.NEAREST}),Object.assign(r,t.defaults,e),r}(function(i,t){function e(){this.constructor=i}Z(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){var s=r.filterFrame,a=s.width,l=s.height;this.uniforms.dimensions[0]=a,this.uniforms.dimensions[1]=l,this.uniforms.aspect=l/a,this.uniforms.seed=this.seed,this.uniforms.offset=this.offset,this.uniforms.fillMode=this.fillMode,e.applyFilter(this,r,n,o)},t.prototype._randomizeSizes=function(){var e=this._sizes,r=this._slices-1,o=Math.min(this.minSize/this.sampleSize,.9/this._slices);if(this.average){for(var s=this._slices,a=1,l=0;l<r;l++){var d=Math.max(a/(s-l)*(1-.6*Math.random()),o);e[l]=d,a-=d}e[r]=a}else{a=1;var _=Math.sqrt(1/this._slices);for(l=0;l<r;l++)d=Math.max(_*a*Math.random(),o),e[l]=d,a-=d;e[r]=a}this.shuffle()},t.prototype.shuffle=function(){for(var e=this._sizes,n=this._slices-1;n>0;n--){var o=Math.random()*n>>0,s=e[n];e[n]=e[o],e[o]=s}},t.prototype._randomizeOffsets=function(){for(var e=0;e<this._slices;e++)this._offsets[e]=Math.random()*(Math.random()<.5?-1:1)},t.prototype.refresh=function(){this._randomizeSizes(),this._randomizeOffsets(),this.redraw()},t.prototype.redraw=function(){var e=this.sampleSize,r=this.texture,n=this._canvas.getContext("2d");n.clearRect(0,0,8,e);for(var o,s=0,a=0;a<this._slices;a++){o=Math.floor(256*this._offsets[a]);var l=this._sizes[a]*e;n.fillStyle="rgba("+(o>0?o:0)+", "+(o<0?-o:0)+", 0, 1)",n.fillRect(0,s>>0,e,l+1>>0),s+=l}r.baseTexture.update(),this.uniforms.displacementMap=r},Object.defineProperty(t.prototype,"sizes",{get:function(){return this._sizes},set:function(e){for(var r=Math.min(this._slices,e.length),n=0;n<r;n++)this._sizes[n]=e[n]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"offsets",{get:function(){return this._offsets},set:function(e){for(var r=Math.min(this._slices,e.length),n=0;n<r;n++)this._offsets[n]=e[n]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"slices",{get:function(){return this._slices},set:function(e){this._slices!==e&&(this._slices=e,this.uniforms.slices=e,this._sizes=this.uniforms.slicesWidth=new Float32Array(e),this._offsets=this.uniforms.slicesOffset=new Float32Array(e),this.refresh())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"direction",{get:function(){return this._direction},set:function(e){if(this._direction!==e){this._direction=e;var r=e*y.ZX;this.uniforms.sinDir=Math.sin(r),this.uniforms.cosDir=Math.cos(r)}},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"red",{get:function(){return this.uniforms.red},set:function(e){this.uniforms.red=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"green",{get:function(){return this.uniforms.green},set:function(e){this.uniforms.green=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"blue",{get:function(){return this.uniforms.blue},set:function(e){this.uniforms.blue=e},enumerable:!1,configurable:!0}),t.prototype.destroy=function(){var e;null===(e=this.texture)||void 0===e||e.destroy(!0),this.texture=this._canvas=this.red=this.green=this.blue=this._sizes=this._offsets=null},t.defaults={slices:5,offset:100,direction:0,fillMode:0,average:!1,seed:0,red:[0,0],green:[0,0],blue:[0,0],minSize:8,sampleSize:512},t.TRANSPARENT=0,t.ORIGINAL=1,t.LOOP=2,t.CLAMP=3,t.MIRROR=4}(f.wn);var $=function(i,t){return($=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)},me=function(i){function t(e){var r=this,n=Object.assign({},t.defaults,e),o=n.outerStrength,s=n.innerStrength,a=n.color,l=n.knockout,u=n.quality,d=Math.round(n.distance);return(r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nuniform sampler2D uSampler;\n\nuniform float outerStrength;\nuniform float innerStrength;\n\nuniform vec4 glowColor;\n\nuniform vec4 filterArea;\nuniform vec4 filterClamp;\nuniform bool knockout;\n\nconst float PI = 3.14159265358979323846264;\n\nconst float DIST = __DIST__;\nconst float ANGLE_STEP_SIZE = min(__ANGLE_STEP_SIZE__, PI * 2.0);\nconst float ANGLE_STEP_NUM = ceil(PI * 2.0 / ANGLE_STEP_SIZE);\n\nconst float MAX_TOTAL_ALPHA = ANGLE_STEP_NUM * DIST * (DIST + 1.0) / 2.0;\n\nvoid main(void) {\n    vec2 px = vec2(1.0 / filterArea.x, 1.0 / filterArea.y);\n\n    float totalAlpha = 0.0;\n\n    vec2 direction;\n    vec2 displaced;\n    vec4 curColor;\n\n    for (float angle = 0.0; angle < PI * 2.0; angle += ANGLE_STEP_SIZE) {\n       direction = vec2(cos(angle), sin(angle)) * px;\n\n       for (float curDistance = 0.0; curDistance < DIST; curDistance++) {\n           displaced = clamp(vTextureCoord + direction * \n                   (curDistance + 1.0), filterClamp.xy, filterClamp.zw);\n\n           curColor = texture2D(uSampler, displaced);\n\n           totalAlpha += (DIST - curDistance) * curColor.a;\n       }\n    }\n    \n    curColor = texture2D(uSampler, vTextureCoord);\n\n    float alphaRatio = (totalAlpha / MAX_TOTAL_ALPHA);\n\n    float innerGlowAlpha = (1.0 - alphaRatio) * innerStrength * curColor.a;\n    float innerGlowStrength = min(1.0, innerGlowAlpha);\n    \n    vec4 innerColor = mix(curColor, glowColor, innerGlowStrength);\n\n    float outerGlowAlpha = alphaRatio * outerStrength * (1. - curColor.a);\n    float outerGlowStrength = min(1.0 - innerColor.a, outerGlowAlpha);\n\n    vec4 outerGlowColor = outerGlowStrength * glowColor.rgba;\n    \n    if (knockout) {\n      float resultAlpha = outerGlowAlpha + innerGlowAlpha;\n      gl_FragColor = vec4(glowColor.rgb * resultAlpha, resultAlpha);\n    }\n    else {\n      gl_FragColor = innerColor + outerGlowColor;\n    }\n}\n".replace(/__ANGLE_STEP_SIZE__/gi,""+(1/u/d).toFixed(7)).replace(/__DIST__/gi,d.toFixed(0)+".0"))||this).uniforms.glowColor=new Float32Array([0,0,0,1]),Object.assign(r,{color:a,outerStrength:o,innerStrength:s,padding:d,knockout:l}),r}return function(i,t){function e(){this.constructor=i}$(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}(t,i),Object.defineProperty(t.prototype,"color",{get:function(){return(0,m.CO)(this.uniforms.glowColor)},set:function(e){(0,m.wK)(e,this.uniforms.glowColor)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"outerStrength",{get:function(){return this.uniforms.outerStrength},set:function(e){this.uniforms.outerStrength=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"innerStrength",{get:function(){return this.uniforms.innerStrength},set:function(e){this.uniforms.innerStrength=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"knockout",{get:function(){return this.uniforms.knockout},set:function(e){this.uniforms.knockout=e},enumerable:!1,configurable:!0}),t.defaults={distance:10,outerStrength:4,innerStrength:0,color:16777215,quality:.1,knockout:!1},t}(f.wn),H=function(i,t){return(H=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)},J=(function(i){function t(e){var r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\nuniform vec2 dimensions;\n\nuniform vec2 light;\nuniform bool parallel;\nuniform float aspect;\n\nuniform float gain;\nuniform float lacunarity;\nuniform float time;\nuniform float alpha;\n\n${perlin}\n\nvoid main(void) {\n    vec2 coord = vTextureCoord * filterArea.xy / dimensions.xy;\n\n    float d;\n\n    if (parallel) {\n        float _cos = light.x;\n        float _sin = light.y;\n        d = (_cos * coord.x) + (_sin * coord.y * aspect);\n    } else {\n        float dx = coord.x - light.x / dimensions.x;\n        float dy = (coord.y - light.y / dimensions.y) * aspect;\n        float dis = sqrt(dx * dx + dy * dy) + 0.00001;\n        d = dy / dis;\n    }\n\n    vec3 dir = vec3(d, d, 0.0);\n\n    float noise = turb(dir + vec3(time, 0.0, 62.1 + time) * 0.05, vec3(480.0, 320.0, 480.0), lacunarity, gain);\n    noise = mix(noise, 0.0, 0.3);\n    //fade vertically.\n    vec4 mist = vec4(noise, noise, noise, 1.0) * (1.0 - coord.y);\n    mist.a = 1.0;\n    // apply user alpha\n    mist *= alpha;\n\n    gl_FragColor = texture2D(uSampler, vTextureCoord) + mist;\n\n}\n".replace("${perlin}","vec3 mod289(vec3 x)\n{\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\nvec4 mod289(vec4 x)\n{\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\nvec4 permute(vec4 x)\n{\n    return mod289(((x * 34.0) + 1.0) * x);\n}\nvec4 taylorInvSqrt(vec4 r)\n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\nvec3 fade(vec3 t)\n{\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n}\n// Classic Perlin noise, periodic variant\nfloat pnoise(vec3 P, vec3 rep)\n{\n    vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n    vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n    Pi0 = mod289(Pi0);\n    Pi1 = mod289(Pi1);\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\n    vec4 iz0 = Pi0.zzzz;\n    vec4 iz1 = Pi1.zzzz;\n    vec4 ixy = permute(permute(ix) + iy);\n    vec4 ixy0 = permute(ixy + iz0);\n    vec4 ixy1 = permute(ixy + iz1);\n    vec4 gx0 = ixy0 * (1.0 / 7.0);\n    vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n    gx0 = fract(gx0);\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n    vec4 sz0 = step(gz0, vec4(0.0));\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n    vec4 gx1 = ixy1 * (1.0 / 7.0);\n    vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n    gx1 = fract(gx1);\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n    vec4 sz1 = step(gz1, vec4(0.0));\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n    vec3 g000 = vec3(gx0.x, gy0.x, gz0.x);\n    vec3 g100 = vec3(gx0.y, gy0.y, gz0.y);\n    vec3 g010 = vec3(gx0.z, gy0.z, gz0.z);\n    vec3 g110 = vec3(gx0.w, gy0.w, gz0.w);\n    vec3 g001 = vec3(gx1.x, gy1.x, gz1.x);\n    vec3 g101 = vec3(gx1.y, gy1.y, gz1.y);\n    vec3 g011 = vec3(gx1.z, gy1.z, gz1.z);\n    vec3 g111 = vec3(gx1.w, gy1.w, gz1.w);\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n    g000 *= norm0.x;\n    g010 *= norm0.y;\n    g100 *= norm0.z;\n    g110 *= norm0.w;\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n    g001 *= norm1.x;\n    g011 *= norm1.y;\n    g101 *= norm1.z;\n    g111 *= norm1.w;\n    float n000 = dot(g000, Pf0);\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n    float n111 = dot(g111, Pf1);\n    vec3 fade_xyz = fade(Pf0);\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n    return 2.2 * n_xyz;\n}\nfloat turb(vec3 P, vec3 rep, float lacunarity, float gain)\n{\n    float sum = 0.0;\n    float sc = 1.0;\n    float totalgain = 1.0;\n    for (float i = 0.0; i < 6.0; i++)\n    {\n        sum += totalgain * pnoise(P * sc, rep);\n        sc *= lacunarity;\n        totalgain *= gain;\n    }\n    return abs(sum);\n}\n"))||this;r.parallel=!0,r.time=0,r._angle=0,r.uniforms.dimensions=new Float32Array(2);var n=Object.assign(t.defaults,e);return r._angleLight=new y.E9,r.angle=n.angle,r.gain=n.gain,r.lacunarity=n.lacunarity,r.alpha=n.alpha,r.parallel=n.parallel,r.center=n.center,r.time=n.time,r}(function(i,t){function e(){this.constructor=i}H(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){var s=r.filterFrame,a=s.width,l=s.height;this.uniforms.light=this.parallel?this._angleLight:this.center,this.uniforms.parallel=this.parallel,this.uniforms.dimensions[0]=a,this.uniforms.dimensions[1]=l,this.uniforms.aspect=l/a,this.uniforms.time=this.time,this.uniforms.alpha=this.alpha,e.applyFilter(this,r,n,o)},Object.defineProperty(t.prototype,"angle",{get:function(){return this._angle},set:function(e){this._angle=e;var r=e*y.ZX;this._angleLight.x=Math.cos(r),this._angleLight.y=Math.sin(r)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"gain",{get:function(){return this.uniforms.gain},set:function(e){this.uniforms.gain=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lacunarity",{get:function(){return this.uniforms.lacunarity},set:function(e){this.uniforms.lacunarity=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"alpha",{get:function(){return this.uniforms.alpha},set:function(e){this.uniforms.alpha=e},enumerable:!1,configurable:!0}),t.defaults={angle:30,gain:.5,lacunarity:2.5,time:0,parallel:!0,center:[0,0],alpha:1}}(f.wn),function(i,t){return(J=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)});!function(i){function t(e,r,n){void 0===e&&(e=[0,0]),void 0===r&&(r=5),void 0===n&&(n=0);var o=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\n\nuniform vec2 uVelocity;\nuniform int uKernelSize;\nuniform float uOffset;\n\nconst int MAX_KERNEL_SIZE = 2048;\n\n// Notice:\n// the perfect way:\n//    int kernelSize = min(uKernelSize, MAX_KERNELSIZE);\n// BUT in real use-case , uKernelSize < MAX_KERNELSIZE almost always.\n// So use uKernelSize directly.\n\nvoid main(void)\n{\n    vec4 color = texture2D(uSampler, vTextureCoord);\n\n    if (uKernelSize == 0)\n    {\n        gl_FragColor = color;\n        return;\n    }\n\n    vec2 velocity = uVelocity / filterArea.xy;\n    float offset = -uOffset / length(uVelocity) - 0.5;\n    int k = uKernelSize - 1;\n\n    for(int i = 0; i < MAX_KERNEL_SIZE - 1; i++) {\n        if (i == k) {\n            break;\n        }\n        vec2 bias = velocity * (float(i) / float(k) + offset);\n        color += texture2D(uSampler, vTextureCoord + bias);\n    }\n    gl_FragColor = color / float(uKernelSize);\n}\n")||this;return o.kernelSize=5,o.uniforms.uVelocity=new Float32Array(2),o._velocity=new y.AB(o.velocityChanged,o),o.setVelocity(e),o.kernelSize=r,o.offset=n,o}(function(i,t){function e(){this.constructor=i}J(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){var s=this.velocity;this.uniforms.uKernelSize=0!==s.x||0!==s.y?this.kernelSize:0,e.applyFilter(this,r,n,o)},Object.defineProperty(t.prototype,"velocity",{get:function(){return this._velocity},set:function(e){this.setVelocity(e)},enumerable:!1,configurable:!0}),t.prototype.setVelocity=function(e){Array.isArray(e)?this._velocity.set(e[0],e[1]):this._velocity.copyFrom(e)},t.prototype.velocityChanged=function(){this.uniforms.uVelocity[0]=this._velocity.x,this.uniforms.uVelocity[1]=this._velocity.y,this.padding=1+(Math.max(Math.abs(this._velocity.x),Math.abs(this._velocity.y))>>0)},Object.defineProperty(t.prototype,"offset",{get:function(){return this.uniforms.uOffset},set:function(e){this.uniforms.uOffset=e},enumerable:!1,configurable:!0})}(f.wn);var Q=function(i,t){return(Q=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)},q=(function(i){function t(e,r,n){void 0===r&&(r=.05),void 0===n&&(n=e.length);var o=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform float epsilon;\n\nconst int MAX_COLORS = %maxColors%;\n\nuniform vec3 originalColors[MAX_COLORS];\nuniform vec3 targetColors[MAX_COLORS];\n\nvoid main(void)\n{\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\n\n    float alpha = gl_FragColor.a;\n    if (alpha < 0.0001)\n    {\n      return;\n    }\n\n    vec3 color = gl_FragColor.rgb / alpha;\n\n    for(int i = 0; i < MAX_COLORS; i++)\n    {\n      vec3 origColor = originalColors[i];\n      if (origColor.r < 0.0)\n      {\n        break;\n      }\n      vec3 colorDiff = origColor - color;\n      if (length(colorDiff) < epsilon)\n      {\n        vec3 targetColor = targetColors[i];\n        gl_FragColor = vec4((targetColor + colorDiff) * alpha, alpha);\n        return;\n      }\n    }\n}\n".replace(/%maxColors%/g,n.toFixed(0)))||this;return o._replacements=[],o._maxColors=0,o.epsilon=r,o._maxColors=n,o.uniforms.originalColors=new Float32Array(3*n),o.uniforms.targetColors=new Float32Array(3*n),o.replacements=e,o}(function(i,t){function e(){this.constructor=i}Q(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),Object.defineProperty(t.prototype,"replacements",{get:function(){return this._replacements},set:function(e){var r=this.uniforms.originalColors,n=this.uniforms.targetColors,o=e.length;if(o>this._maxColors)throw new Error("Length of replacements ("+o+") exceeds the maximum colors length ("+this._maxColors+")");r[3*o]=-1;for(var s=0;s<o;s++){var a=e[s],l=a[0];"number"==typeof l?l=(0,m.wK)(l):a[0]=(0,m.CO)(l),r[3*s]=l[0],r[3*s+1]=l[1],r[3*s+2]=l[2];var u=a[1];"number"==typeof u?u=(0,m.wK)(u):a[1]=(0,m.CO)(u),n[3*s]=u[0],n[3*s+1]=u[1],n[3*s+2]=u[2]}this._replacements=e},enumerable:!1,configurable:!0}),t.prototype.refresh=function(){this.replacements=this._replacements},Object.defineProperty(t.prototype,"maxColors",{get:function(){return this._maxColors},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"epsilon",{get:function(){return this.uniforms.epsilon},set:function(e){this.uniforms.epsilon=e},enumerable:!1,configurable:!0})}(f.wn),function(i,t){return(q=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)});!function(i){function t(e,r){void 0===r&&(r=0);var n=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\nuniform vec2 dimensions;\n\nuniform float sepia;\nuniform float noise;\nuniform float noiseSize;\nuniform float scratch;\nuniform float scratchDensity;\nuniform float scratchWidth;\nuniform float vignetting;\nuniform float vignettingAlpha;\nuniform float vignettingBlur;\nuniform float seed;\n\nconst float SQRT_2 = 1.414213;\nconst vec3 SEPIA_RGB = vec3(112.0 / 255.0, 66.0 / 255.0, 20.0 / 255.0);\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec3 Overlay(vec3 src, vec3 dst)\n{\n    // if (dst <= 0.5) then: 2 * src * dst\n    // if (dst > 0.5) then: 1 - 2 * (1 - dst) * (1 - src)\n    return vec3((dst.x <= 0.5) ? (2.0 * src.x * dst.x) : (1.0 - 2.0 * (1.0 - dst.x) * (1.0 - src.x)),\n                (dst.y <= 0.5) ? (2.0 * src.y * dst.y) : (1.0 - 2.0 * (1.0 - dst.y) * (1.0 - src.y)),\n                (dst.z <= 0.5) ? (2.0 * src.z * dst.z) : (1.0 - 2.0 * (1.0 - dst.z) * (1.0 - src.z)));\n}\n\n\nvoid main()\n{\n    gl_FragColor = texture2D(uSampler, vTextureCoord);\n    vec3 color = gl_FragColor.rgb;\n\n    if (sepia > 0.0)\n    {\n        float gray = (color.x + color.y + color.z) / 3.0;\n        vec3 grayscale = vec3(gray);\n\n        color = Overlay(SEPIA_RGB, grayscale);\n\n        color = grayscale + sepia * (color - grayscale);\n    }\n\n    vec2 coord = vTextureCoord * filterArea.xy / dimensions.xy;\n\n    if (vignetting > 0.0)\n    {\n        float outter = SQRT_2 - vignetting * SQRT_2;\n        vec2 dir = vec2(vec2(0.5, 0.5) - coord);\n        dir.y *= dimensions.y / dimensions.x;\n        float darker = clamp((outter - length(dir) * SQRT_2) / ( 0.00001 + vignettingBlur * SQRT_2), 0.0, 1.0);\n        color.rgb *= darker + (1.0 - darker) * (1.0 - vignettingAlpha);\n    }\n\n    if (scratchDensity > seed && scratch != 0.0)\n    {\n        float phase = seed * 256.0;\n        float s = mod(floor(phase), 2.0);\n        float dist = 1.0 / scratchDensity;\n        float d = distance(coord, vec2(seed * dist, abs(s - seed * dist)));\n        if (d < seed * 0.6 + 0.4)\n        {\n            highp float period = scratchDensity * 10.0;\n\n            float xx = coord.x * period + phase;\n            float aa = abs(mod(xx, 0.5) * 4.0);\n            float bb = mod(floor(xx / 0.5), 2.0);\n            float yy = (1.0 - bb) * aa + bb * (2.0 - aa);\n\n            float kk = 2.0 * period;\n            float dw = scratchWidth / dimensions.x * (0.75 + seed);\n            float dh = dw * kk;\n\n            float tine = (yy - (2.0 - dh));\n\n            if (tine > 0.0) {\n                float _sign = sign(scratch);\n\n                tine = s * tine / period + scratch + 0.1;\n                tine = clamp(tine + 1.0, 0.5 + _sign * 0.5, 1.5 + _sign * 0.5);\n\n                color.rgb *= tine;\n            }\n        }\n    }\n\n    if (noise > 0.0 && noiseSize > 0.0)\n    {\n        vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\n        pixelCoord.x = floor(pixelCoord.x / noiseSize);\n        pixelCoord.y = floor(pixelCoord.y / noiseSize);\n        // vec2 d = pixelCoord * noiseSize * vec2(1024.0 + seed * 512.0, 1024.0 - seed * 512.0);\n        // float _noise = snoise(d) * 0.5;\n        float _noise = rand(pixelCoord * noiseSize * seed) - 0.5;\n        color += _noise * noise;\n    }\n\n    gl_FragColor.rgb = color;\n}\n")||this;return n.seed=0,n.uniforms.dimensions=new Float32Array(2),"number"==typeof e?(n.seed=e,e=void 0):n.seed=r,Object.assign(n,t.defaults,e),n}(function(i,t){function e(){this.constructor=i}q(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){var s,a;this.uniforms.dimensions[0]=null===(s=r.filterFrame)||void 0===s?void 0:s.width,this.uniforms.dimensions[1]=null===(a=r.filterFrame)||void 0===a?void 0:a.height,this.uniforms.seed=this.seed,e.applyFilter(this,r,n,o)},Object.defineProperty(t.prototype,"sepia",{get:function(){return this.uniforms.sepia},set:function(e){this.uniforms.sepia=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"noise",{get:function(){return this.uniforms.noise},set:function(e){this.uniforms.noise=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"noiseSize",{get:function(){return this.uniforms.noiseSize},set:function(e){this.uniforms.noiseSize=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"scratch",{get:function(){return this.uniforms.scratch},set:function(e){this.uniforms.scratch=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"scratchDensity",{get:function(){return this.uniforms.scratchDensity},set:function(e){this.uniforms.scratchDensity=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"scratchWidth",{get:function(){return this.uniforms.scratchWidth},set:function(e){this.uniforms.scratchWidth=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"vignetting",{get:function(){return this.uniforms.vignetting},set:function(e){this.uniforms.vignetting=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"vignettingAlpha",{get:function(){return this.uniforms.vignettingAlpha},set:function(e){this.uniforms.vignettingAlpha=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"vignettingBlur",{get:function(){return this.uniforms.vignettingBlur},set:function(e){this.uniforms.vignettingBlur=e},enumerable:!1,configurable:!0}),t.defaults={sepia:.3,noise:.3,noiseSize:1,scratch:.5,scratchDensity:.3,scratchWidth:1,vignetting:.3,vignettingAlpha:1,vignettingBlur:.3}}(f.wn);var ee=function(i,t){return(ee=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)},te=(function(i){function t(e,r,n){void 0===e&&(e=1),void 0===r&&(r=0),void 0===n&&(n=.1);var o=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform vec2 thickness;\nuniform vec4 outlineColor;\nuniform vec4 filterClamp;\n\nconst float DOUBLE_PI = 3.14159265358979323846264 * 2.;\n\nvoid main(void) {\n    vec4 ownColor = texture2D(uSampler, vTextureCoord);\n    vec4 curColor;\n    float maxAlpha = 0.;\n    vec2 displaced;\n    for (float angle = 0.; angle <= DOUBLE_PI; angle += ${angleStep}) {\n        displaced.x = vTextureCoord.x + thickness.x * cos(angle);\n        displaced.y = vTextureCoord.y + thickness.y * sin(angle);\n        curColor = texture2D(uSampler, clamp(displaced, filterClamp.xy, filterClamp.zw));\n        maxAlpha = max(maxAlpha, curColor.a);\n    }\n    float resultAlpha = max(maxAlpha, ownColor.a);\n    gl_FragColor = vec4((ownColor.rgb + outlineColor.rgb * (1. - ownColor.a)) * resultAlpha, resultAlpha);\n}\n".replace(/\$\{angleStep\}/,t.getAngleStep(n)))||this;return o._thickness=1,o.uniforms.thickness=new Float32Array([0,0]),o.uniforms.outlineColor=new Float32Array([0,0,0,1]),Object.assign(o,{thickness:e,color:r,quality:n}),o}(function(i,t){function e(){this.constructor=i}ee(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.getAngleStep=function(e){var r=Math.max(e*t.MAX_SAMPLES,t.MIN_SAMPLES);return(2*Math.PI/r).toFixed(7)},t.prototype.apply=function(e,r,n,o){this.uniforms.thickness[0]=this._thickness/r._frame.width,this.uniforms.thickness[1]=this._thickness/r._frame.height,e.applyFilter(this,r,n,o)},Object.defineProperty(t.prototype,"color",{get:function(){return(0,m.CO)(this.uniforms.outlineColor)},set:function(e){(0,m.wK)(e,this.uniforms.outlineColor)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"thickness",{get:function(){return this._thickness},set:function(e){this._thickness=e,this.padding=e},enumerable:!1,configurable:!0}),t.MIN_SAMPLES=1,t.MAX_SAMPLES=100}(f.wn),function(i,t){return(te=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)});!function(i){function t(e){void 0===e&&(e=10);var r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform vec2 size;\nuniform sampler2D uSampler;\n\nuniform vec4 filterArea;\n\nvec2 mapCoord( vec2 coord )\n{\n    coord *= filterArea.xy;\n    coord += filterArea.zw;\n\n    return coord;\n}\n\nvec2 unmapCoord( vec2 coord )\n{\n    coord -= filterArea.zw;\n    coord /= filterArea.xy;\n\n    return coord;\n}\n\nvec2 pixelate(vec2 coord, vec2 size)\n{\n\treturn floor( coord / size ) * size;\n}\n\nvoid main(void)\n{\n    vec2 coord = mapCoord(vTextureCoord);\n\n    coord = pixelate(coord, size);\n\n    coord = unmapCoord(coord);\n\n    gl_FragColor = texture2D(uSampler, coord);\n}\n")||this;return r.size=e,r}(function(i,t){function e(){this.constructor=i}te(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),Object.defineProperty(t.prototype,"size",{get:function(){return this.uniforms.size},set:function(e){"number"==typeof e&&(e=[e,e]),this.uniforms.size=e},enumerable:!1,configurable:!0})}(f.wn);var re=function(i,t){return(re=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e,r,n,o){void 0===e&&(e=0),void 0===r&&(r=[0,0]),void 0===n&&(n=5),void 0===o&&(o=-1);var s=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\n\nuniform float uRadian;\nuniform vec2 uCenter;\nuniform float uRadius;\nuniform int uKernelSize;\n\nconst int MAX_KERNEL_SIZE = 2048;\n\nvoid main(void)\n{\n    vec4 color = texture2D(uSampler, vTextureCoord);\n\n    if (uKernelSize == 0)\n    {\n        gl_FragColor = color;\n        return;\n    }\n\n    float aspect = filterArea.y / filterArea.x;\n    vec2 center = uCenter.xy / filterArea.xy;\n    float gradient = uRadius / filterArea.x * 0.3;\n    float radius = uRadius / filterArea.x - gradient * 0.5;\n    int k = uKernelSize - 1;\n\n    vec2 coord = vTextureCoord;\n    vec2 dir = vec2(center - coord);\n    float dist = length(vec2(dir.x, dir.y * aspect));\n\n    float radianStep = uRadian;\n    if (radius >= 0.0 && dist > radius) {\n        float delta = dist - radius;\n        float gap = gradient;\n        float scale = 1.0 - abs(delta / gap);\n        if (scale <= 0.0) {\n            gl_FragColor = color;\n            return;\n        }\n        radianStep *= scale;\n    }\n    radianStep /= float(k);\n\n    float s = sin(radianStep);\n    float c = cos(radianStep);\n    mat2 rotationMatrix = mat2(vec2(c, -s), vec2(s, c));\n\n    for(int i = 0; i < MAX_KERNEL_SIZE - 1; i++) {\n        if (i == k) {\n            break;\n        }\n\n        coord -= center;\n        coord.y *= aspect;\n        coord = rotationMatrix * coord;\n        coord.y /= aspect;\n        coord += center;\n\n        vec4 sample = texture2D(uSampler, coord);\n\n        // switch to pre-multiplied alpha to correctly blur transparent images\n        // sample.rgb *= sample.a;\n\n        color += sample;\n    }\n\n    gl_FragColor = color / float(uKernelSize);\n}\n")||this;return s._angle=0,s.angle=e,s.center=r,s.kernelSize=n,s.radius=o,s}(function(i,t){function e(){this.constructor=i}re(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){this.uniforms.uKernelSize=0!==this._angle?this.kernelSize:0,e.applyFilter(this,r,n,o)},Object.defineProperty(t.prototype,"angle",{get:function(){return this._angle},set:function(e){this._angle=e,this.uniforms.uRadian=e*Math.PI/180},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"center",{get:function(){return this.uniforms.uCenter},set:function(e){this.uniforms.uCenter=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"radius",{get:function(){return this.uniforms.uRadius},set:function(e){(e<0||e===1/0)&&(e=-1),this.uniforms.uRadius=e},enumerable:!1,configurable:!0})}(f.wn);var ne=function(i,t){return(ne=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e){var r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\n\nuniform vec4 filterArea;\nuniform vec4 filterClamp;\nuniform vec2 dimensions;\n\nuniform bool mirror;\nuniform float boundary;\nuniform vec2 amplitude;\nuniform vec2 waveLength;\nuniform vec2 alpha;\nuniform float time;\n\nfloat rand(vec2 co) {\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid main(void)\n{\n    vec2 pixelCoord = vTextureCoord.xy * filterArea.xy;\n    vec2 coord = pixelCoord / dimensions;\n\n    if (coord.y < boundary) {\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\n        return;\n    }\n\n    float k = (coord.y - boundary) / (1. - boundary + 0.0001);\n    float areaY = boundary * dimensions.y / filterArea.y;\n    float v = areaY + areaY - vTextureCoord.y;\n    float y = mirror ? v : vTextureCoord.y;\n\n    float _amplitude = ((amplitude.y - amplitude.x) * k + amplitude.x ) / filterArea.x;\n    float _waveLength = ((waveLength.y - waveLength.x) * k + waveLength.x) / filterArea.y;\n    float _alpha = (alpha.y - alpha.x) * k + alpha.x;\n\n    float x = vTextureCoord.x + cos(v * 6.28 / _waveLength - time) * _amplitude;\n    x = clamp(x, filterClamp.x, filterClamp.z);\n\n    vec4 color = texture2D(uSampler, vec2(x, y));\n\n    gl_FragColor = color * _alpha;\n}\n")||this;return r.time=0,r.uniforms.amplitude=new Float32Array(2),r.uniforms.waveLength=new Float32Array(2),r.uniforms.alpha=new Float32Array(2),r.uniforms.dimensions=new Float32Array(2),Object.assign(r,t.defaults,e),r}(function(i,t){function e(){this.constructor=i}ne(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){var s,a;this.uniforms.dimensions[0]=null===(s=r.filterFrame)||void 0===s?void 0:s.width,this.uniforms.dimensions[1]=null===(a=r.filterFrame)||void 0===a?void 0:a.height,this.uniforms.time=this.time,e.applyFilter(this,r,n,o)},Object.defineProperty(t.prototype,"mirror",{get:function(){return this.uniforms.mirror},set:function(e){this.uniforms.mirror=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"boundary",{get:function(){return this.uniforms.boundary},set:function(e){this.uniforms.boundary=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"amplitude",{get:function(){return this.uniforms.amplitude},set:function(e){this.uniforms.amplitude[0]=e[0],this.uniforms.amplitude[1]=e[1]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"waveLength",{get:function(){return this.uniforms.waveLength},set:function(e){this.uniforms.waveLength[0]=e[0],this.uniforms.waveLength[1]=e[1]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"alpha",{get:function(){return this.uniforms.alpha},set:function(e){this.uniforms.alpha[0]=e[0],this.uniforms.alpha[1]=e[1]},enumerable:!1,configurable:!0}),t.defaults={mirror:!0,boundary:.5,amplitude:[0,20],waveLength:[30,100],alpha:[1,1],time:0}}(f.wn);var ie=function(i,t){return(ie=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e,r,n){void 0===e&&(e=[-10,0]),void 0===r&&(r=[0,10]),void 0===n&&(n=[0,0]);var o=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","precision mediump float;\n\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\nuniform vec2 red;\nuniform vec2 green;\nuniform vec2 blue;\n\nvoid main(void)\n{\n   gl_FragColor.r = texture2D(uSampler, vTextureCoord + red/filterArea.xy).r;\n   gl_FragColor.g = texture2D(uSampler, vTextureCoord + green/filterArea.xy).g;\n   gl_FragColor.b = texture2D(uSampler, vTextureCoord + blue/filterArea.xy).b;\n   gl_FragColor.a = texture2D(uSampler, vTextureCoord).a;\n}\n")||this;return o.red=e,o.green=r,o.blue=n,o}(function(i,t){function e(){this.constructor=i}ie(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),Object.defineProperty(t.prototype,"red",{get:function(){return this.uniforms.red},set:function(e){this.uniforms.red=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"green",{get:function(){return this.uniforms.green},set:function(e){this.uniforms.green=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"blue",{get:function(){return this.uniforms.blue},set:function(e){this.uniforms.blue=e},enumerable:!1,configurable:!0})}(f.wn);var oe=function(i,t){return(oe=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e,r,n){void 0===e&&(e=[0,0]),void 0===n&&(n=0);var o=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\nuniform vec4 filterClamp;\n\nuniform vec2 center;\n\nuniform float amplitude;\nuniform float wavelength;\n// uniform float power;\nuniform float brightness;\nuniform float speed;\nuniform float radius;\n\nuniform float time;\n\nconst float PI = 3.14159;\n\nvoid main()\n{\n    float halfWavelength = wavelength * 0.5 / filterArea.x;\n    float maxRadius = radius / filterArea.x;\n    float currentRadius = time * speed / filterArea.x;\n\n    float fade = 1.0;\n\n    if (maxRadius > 0.0) {\n        if (currentRadius > maxRadius) {\n            gl_FragColor = texture2D(uSampler, vTextureCoord);\n            return;\n        }\n        fade = 1.0 - pow(currentRadius / maxRadius, 2.0);\n    }\n\n    vec2 dir = vec2(vTextureCoord - center / filterArea.xy);\n    dir.y *= filterArea.y / filterArea.x;\n    float dist = length(dir);\n\n    if (dist <= 0.0 || dist < currentRadius - halfWavelength || dist > currentRadius + halfWavelength) {\n        gl_FragColor = texture2D(uSampler, vTextureCoord);\n        return;\n    }\n\n    vec2 diffUV = normalize(dir);\n\n    float diff = (dist - currentRadius) / halfWavelength;\n\n    float p = 1.0 - pow(abs(diff), 2.0);\n\n    // float powDiff = diff * pow(p, 2.0) * ( amplitude * fade );\n    float powDiff = 1.25 * sin(diff * PI) * p * ( amplitude * fade );\n\n    vec2 offset = diffUV * powDiff / filterArea.xy;\n\n    // Do clamp :\n    vec2 coord = vTextureCoord + offset;\n    vec2 clampedCoord = clamp(coord, filterClamp.xy, filterClamp.zw);\n    vec4 color = texture2D(uSampler, clampedCoord);\n    if (coord != clampedCoord) {\n        color *= max(0.0, 1.0 - length(coord - clampedCoord));\n    }\n\n    // No clamp :\n    // gl_FragColor = texture2D(uSampler, vTextureCoord + offset);\n\n    color.rgb *= 1.0 + (brightness - 1.0) * p * fade;\n\n    gl_FragColor = color;\n}\n")||this;return o.center=e,Object.assign(o,t.defaults,r),o.time=n,o}(function(i,t){function e(){this.constructor=i}oe(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){this.uniforms.time=this.time,e.applyFilter(this,r,n,o)},Object.defineProperty(t.prototype,"center",{get:function(){return this.uniforms.center},set:function(e){this.uniforms.center=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"amplitude",{get:function(){return this.uniforms.amplitude},set:function(e){this.uniforms.amplitude=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"wavelength",{get:function(){return this.uniforms.wavelength},set:function(e){this.uniforms.wavelength=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"brightness",{get:function(){return this.uniforms.brightness},set:function(e){this.uniforms.brightness=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"speed",{get:function(){return this.uniforms.speed},set:function(e){this.uniforms.speed=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"radius",{get:function(){return this.uniforms.radius},set:function(e){this.uniforms.radius=e},enumerable:!1,configurable:!0}),t.defaults={amplitude:30,wavelength:160,brightness:1,speed:500,radius:-1}}(f.wn);var se=function(i,t){return(se=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e,r,n){void 0===r&&(r=0),void 0===n&&(n=1);var o=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform sampler2D uLightmap;\nuniform vec4 filterArea;\nuniform vec2 dimensions;\nuniform vec4 ambientColor;\nvoid main() {\n    vec4 diffuseColor = texture2D(uSampler, vTextureCoord);\n    vec2 lightCoord = (vTextureCoord * filterArea.xy) / dimensions;\n    vec4 light = texture2D(uLightmap, lightCoord);\n    vec3 ambient = ambientColor.rgb * ambientColor.a;\n    vec3 intensity = ambient + light.rgb;\n    vec3 finalColor = diffuseColor.rgb * intensity;\n    gl_FragColor = vec4(finalColor, diffuseColor.a);\n}\n")||this;return o._color=0,o.uniforms.dimensions=new Float32Array(2),o.uniforms.ambientColor=new Float32Array([0,0,0,n]),o.texture=e,o.color=r,o}(function(i,t){function e(){this.constructor=i}se(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),t.prototype.apply=function(e,r,n,o){var s,a;this.uniforms.dimensions[0]=null===(s=r.filterFrame)||void 0===s?void 0:s.width,this.uniforms.dimensions[1]=null===(a=r.filterFrame)||void 0===a?void 0:a.height,e.applyFilter(this,r,n,o)},Object.defineProperty(t.prototype,"texture",{get:function(){return this.uniforms.uLightmap},set:function(e){this.uniforms.uLightmap=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"color",{get:function(){return this._color},set:function(e){var r=this.uniforms.ambientColor;"number"==typeof e?((0,m.wK)(e,r),this._color=e):(r[0]=e[0],r[1]=e[1],r[2]=e[2],r[3]=e[3],this._color=(0,m.CO)(r))},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"alpha",{get:function(){return this.uniforms.ambientColor[3]},set:function(e){this.uniforms.ambientColor[3]=e},enumerable:!1,configurable:!0})}(f.wn);var ae=function(i,t){return(ae=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};function A(i,t){function e(){this.constructor=i}ae(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)}var ve=function(i){function t(e,r,n,o){void 0===e&&(e=100),void 0===r&&(r=600);var s=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float blur;\nuniform float gradientBlur;\nuniform vec2 start;\nuniform vec2 end;\nuniform vec2 delta;\nuniform vec2 texSize;\n\nfloat random(vec3 scale, float seed)\n{\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n}\n\nvoid main(void)\n{\n    vec4 color = vec4(0.0);\n    float total = 0.0;\n\n    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n    vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));\n    float radius = smoothstep(0.0, 1.0, abs(dot(vTextureCoord * texSize - start, normal)) / gradientBlur) * blur;\n\n    for (float t = -30.0; t <= 30.0; t++)\n    {\n        float percent = (t + offset - 0.5) / 30.0;\n        float weight = 1.0 - abs(percent);\n        vec4 sample = texture2D(uSampler, vTextureCoord + delta / texSize * percent * radius);\n        sample.rgb *= sample.a;\n        color += sample * weight;\n        total += weight;\n    }\n\n    color /= total;\n    color.rgb /= color.a + 0.00001;\n\n    gl_FragColor = color;\n}\n")||this;return s.uniforms.blur=e,s.uniforms.gradientBlur=r,s.uniforms.start=n||new y.E9(0,window.innerHeight/2),s.uniforms.end=o||new y.E9(600,window.innerHeight/2),s.uniforms.delta=new y.E9(30,30),s.uniforms.texSize=new y.E9(window.innerWidth,window.innerHeight),s.updateDelta(),s}return A(t,i),t.prototype.updateDelta=function(){this.uniforms.delta.x=0,this.uniforms.delta.y=0},Object.defineProperty(t.prototype,"blur",{get:function(){return this.uniforms.blur},set:function(e){this.uniforms.blur=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"gradientBlur",{get:function(){return this.uniforms.gradientBlur},set:function(e){this.uniforms.gradientBlur=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"start",{get:function(){return this.uniforms.start},set:function(e){this.uniforms.start=e,this.updateDelta()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"end",{get:function(){return this.uniforms.end},set:function(e){this.uniforms.end=e,this.updateDelta()},enumerable:!1,configurable:!0}),t}(f.wn),hr=function(i){function t(){return null!==i&&i.apply(this,arguments)||this}return A(t,i),t.prototype.updateDelta=function(){var e=this.uniforms.end.x-this.uniforms.start.x,r=this.uniforms.end.y-this.uniforms.start.y,n=Math.sqrt(e*e+r*r);this.uniforms.delta.x=e/n,this.uniforms.delta.y=r/n},t}(ve),dr=function(i){function t(){return null!==i&&i.apply(this,arguments)||this}return A(t,i),t.prototype.updateDelta=function(){var e=this.uniforms.end.x-this.uniforms.start.x,r=this.uniforms.end.y-this.uniforms.start.y,n=Math.sqrt(e*e+r*r);this.uniforms.delta.x=-r/n,this.uniforms.delta.y=e/n},t}(ve),le=(function(i){function t(e,r,n,o){void 0===e&&(e=100),void 0===r&&(r=600);var s=i.call(this)||this;return s.tiltShiftXFilter=new hr(e,r,n,o),s.tiltShiftYFilter=new dr(e,r,n,o),s}A(t,i),t.prototype.apply=function(e,r,n,o){var s=e.getFilterTexture();this.tiltShiftXFilter.apply(e,r,s,1),this.tiltShiftYFilter.apply(e,s,n,o),e.returnFilterTexture(s)},Object.defineProperty(t.prototype,"blur",{get:function(){return this.tiltShiftXFilter.blur},set:function(e){this.tiltShiftXFilter.blur=this.tiltShiftYFilter.blur=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"gradientBlur",{get:function(){return this.tiltShiftXFilter.gradientBlur},set:function(e){this.tiltShiftXFilter.gradientBlur=this.tiltShiftYFilter.gradientBlur=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"start",{get:function(){return this.tiltShiftXFilter.start},set:function(e){this.tiltShiftXFilter.start=this.tiltShiftYFilter.start=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"end",{get:function(){return this.tiltShiftXFilter.end},set:function(e){this.tiltShiftXFilter.end=this.tiltShiftYFilter.end=e},enumerable:!1,configurable:!0})}(f.wn),function(i,t){return(le=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)});!function(i){function t(e){var r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform float radius;\nuniform float angle;\nuniform vec2 offset;\nuniform vec4 filterArea;\n\nvec2 mapCoord( vec2 coord )\n{\n    coord *= filterArea.xy;\n    coord += filterArea.zw;\n\n    return coord;\n}\n\nvec2 unmapCoord( vec2 coord )\n{\n    coord -= filterArea.zw;\n    coord /= filterArea.xy;\n\n    return coord;\n}\n\nvec2 twist(vec2 coord)\n{\n    coord -= offset;\n\n    float dist = length(coord);\n\n    if (dist < radius)\n    {\n        float ratioDist = (radius - dist) / radius;\n        float angleMod = ratioDist * ratioDist * angle;\n        float s = sin(angleMod);\n        float c = cos(angleMod);\n        coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);\n    }\n\n    coord += offset;\n\n    return coord;\n}\n\nvoid main(void)\n{\n\n    vec2 coord = mapCoord(vTextureCoord);\n\n    coord = twist(coord);\n\n    coord = unmapCoord(coord);\n\n    gl_FragColor = texture2D(uSampler, coord );\n\n}\n")||this;return Object.assign(r,t.defaults,e),r}(function(i,t){function e(){this.constructor=i}le(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),Object.defineProperty(t.prototype,"offset",{get:function(){return this.uniforms.offset},set:function(e){this.uniforms.offset=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"radius",{get:function(){return this.uniforms.radius},set:function(e){this.uniforms.radius=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"angle",{get:function(){return this.uniforms.angle},set:function(e){this.uniforms.angle=e},enumerable:!1,configurable:!0}),t.defaults={radius:200,angle:4,padding:20,offset:new y.E9}}(f.wn);var ue=function(i,t){return(ue=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])})(i,t)};!function(i){function t(e){var r,n=Object.assign(t.defaults,e),o=n.maxKernelSize,s=function(i,t){var e={};for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&t.indexOf(r)<0&&(e[r]=i[r]);if(null!=i&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(r=Object.getOwnPropertySymbols(i);n<r.length;n++)t.indexOf(r[n])<0&&Object.prototype.propertyIsEnumerable.call(i,r[n])&&(e[r[n]]=i[r[n]])}return e}(n,["maxKernelSize"]);return r=i.call(this,"attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}","varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec4 filterArea;\n\nuniform vec2 uCenter;\nuniform float uStrength;\nuniform float uInnerRadius;\nuniform float uRadius;\n\nconst float MAX_KERNEL_SIZE = ${maxKernelSize};\n\n// author: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\nhighp float rand(vec2 co, float seed) {\n    const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n    highp float dt = dot(co + seed, vec2(a, b)), sn = mod(dt, 3.14159);\n    return fract(sin(sn) * c + seed);\n}\n\nvoid main() {\n\n    float minGradient = uInnerRadius * 0.3;\n    float innerRadius = (uInnerRadius + minGradient * 0.5) / filterArea.x;\n\n    float gradient = uRadius * 0.3;\n    float radius = (uRadius - gradient * 0.5) / filterArea.x;\n\n    float countLimit = MAX_KERNEL_SIZE;\n\n    vec2 dir = vec2(uCenter.xy / filterArea.xy - vTextureCoord);\n    float dist = length(vec2(dir.x, dir.y * filterArea.y / filterArea.x));\n\n    float strength = uStrength;\n\n    float delta = 0.0;\n    float gap;\n    if (dist < innerRadius) {\n        delta = innerRadius - dist;\n        gap = minGradient;\n    } else if (radius >= 0.0 && dist > radius) { // radius < 0 means it's infinity\n        delta = dist - radius;\n        gap = gradient;\n    }\n\n    if (delta > 0.0) {\n        float normalCount = gap / filterArea.x;\n        delta = (normalCount - delta) / normalCount;\n        countLimit *= delta;\n        strength *= delta;\n        if (countLimit < 1.0)\n        {\n            gl_FragColor = texture2D(uSampler, vTextureCoord);\n            return;\n        }\n    }\n\n    // randomize the lookup values to hide the fixed number of samples\n    float offset = rand(vTextureCoord, 0.0);\n\n    float total = 0.0;\n    vec4 color = vec4(0.0);\n\n    dir *= strength;\n\n    for (float t = 0.0; t < MAX_KERNEL_SIZE; t++) {\n        float percent = (t + offset) / MAX_KERNEL_SIZE;\n        float weight = 4.0 * (percent - percent * percent);\n        vec2 p = vTextureCoord + dir * percent;\n        vec4 sample = texture2D(uSampler, p);\n\n        // switch to pre-multiplied alpha to correctly blur transparent images\n        // sample.rgb *= sample.a;\n\n        color += sample * weight;\n        total += weight;\n\n        if (t > countLimit){\n            break;\n        }\n    }\n\n    color /= total;\n    // switch back from pre-multiplied alpha\n    // color.rgb /= color.a + 0.00001;\n\n    gl_FragColor = color;\n}\n".replace("${maxKernelSize}",o.toFixed(1)))||this,Object.assign(r,s),r}(function(i,t){function e(){this.constructor=i}ue(i,t),i.prototype=null===t?Object.create(t):(e.prototype=t.prototype,new e)})(t,i),Object.defineProperty(t.prototype,"center",{get:function(){return this.uniforms.uCenter},set:function(e){this.uniforms.uCenter=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"strength",{get:function(){return this.uniforms.uStrength},set:function(e){this.uniforms.uStrength=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"innerRadius",{get:function(){return this.uniforms.uInnerRadius},set:function(e){this.uniforms.uInnerRadius=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"radius",{get:function(){return this.uniforms.uRadius},set:function(e){(e<0||e===1/0)&&(e=-1),this.uniforms.uRadius=e},enumerable:!1,configurable:!0}),t.defaults={strength:.1,center:[0,0],innerRadius:0,radius:-1,maxKernelSize:32}}(f.wn);class br extends c.W20{constructor(t){super(),this.fieldWidth=t,this.progressPercent=0,this.addChild((new c.TCu).beginFill(16711680,0).drawRect(0,0,this.fieldWidth,15).endFill());const e=new c.pn8({fontFamily:"Arial",fontSize:32,fontWeight:"bold",fill:["#ffffff","#00ff99"],stroke:"#4a1850",strokeThickness:5,dropShadow:!0,dropShadowColor:"#000000",dropShadowBlur:4,dropShadowAngle:Math.PI/6,dropShadowDistance:6,wordWrap:!1,lineJoin:"round"});this.scoreText=new c.xvT("",e),this.addChild(this.scoreText),this.progress=new c.TCu,this.progress.filters=[new me({distance:15,outerStrength:2})],this.addChild(this.progress),this.progressLight=new c.TCu,this.progressLight.filters=[new c.u8d.BlurFilter,new me({distance:15,outerStrength:2})],this.addChild(this.progressLight),this.updateProgress(0,0)}updateProgress(t,e){this.progressPercent=t,this.setScore(e)}setScore(t){this.scoreText.text=b.M.numberFormat(t),this.scoreText.x=this.fieldWidth-this.scoreText.width,this.scoreText.y=(this.height-this.scoreText.height)/2,this.setProgress(this.progressPercent)}setProgress(t=null){null!==t&&(this.progressPercent=t);const e=(this.height-15)/2,n=(this.fieldWidth-this.scoreText.width-10)/100*this.progressPercent;this.progress.clear(),this.progressLight.clear(),this.progress.beginFill(65280,1).drawRect(0,e,n,15).endFill(),this.progressLight.beginFill(16777215,1).drawRect(0,e,this.progress.width/50,this.progress.height).endFill()}update(t){this.progressLight.x+=3*t,this.progressLight.x>=this.progress.width-this.progressLight.width&&(this.progressLight.x=0)}}var w=p(5e3);const Cr=[{path:"",component:(()=>{class i extends Ce.a{constructor(){super(...arguments),this.title=`\u041a\u0440\u0438\u0441\u0442\u0430\u043b\u0438\u043a\u0438 | ${xe.X}`,this.backgroundMode="WATER",this.allScore=0,this.stageScore=0,this.levelScore=1e4,this.currentCrystalCount=3,this.levelProcessing=!1}ngOnDestroy(){this.fieldContainer.destroying=!0,super.ngOnDestroy(),this.fieldContainer.onDestroy()}init(){super.init();const e={height:Math.floor((this.screenBox.height-60-60)/h),width:Math.floor((this.screenBox.width-80)/h)};this.app.loader.add("pixel","assets/games/fonts/pixel.fnt.xml"),this.app.loader.load(()=>{const r=this.getFieldRect(e);this.initScreenGame(r),this.initFieldGame(e),this.fieldContainer.initField(this.currentCrystalCount)})}tickerLoop(e){this.destroying||(this.bgWater&&(this.bgWater.shader.uniforms.iTime+=e/500),this.fieldContainer&&this.fieldContainer.update(e),this.starsScene&&this.starsScene.update(e),this.progressContainer&&this.progressContainer.update(e))}initScreenGame(e){switch(this.backgroundMode){case"STARS":this.starsScene=new _e(this.screenBox),this.gameContainer.addChild(this.starsScene);break;case"WATER":this.bgWater=be.pM.getShaderMesh(this.screenBox.width,this.screenBox.height),this.gameContainer.addChild(this.bgWater)}this.progressContainer=new br(e.width),this.progressContainer.x=e.x,this.progressContainer.y=(e.y-this.progressContainer.height)/2,this.gameContainer.addChild(this.progressContainer),this.gameContainer.addChild((new c.TCu).beginFill(9102591,.8).drawRect(e.x,e.y,e.width,e.height).endFill());const r=c.VL4.from("assets/games/crystals/ui-pack.png"),n=this.createUISprite(r,0,0,20,20);n.x=e.x-n.width+10,n.y=e.y-n.height+10,this.gameContainer.addChild(n);const o=this.createUISprite(r,95,0,20,20);o.x=e.x+e.width-10,o.y=e.y-o.height+10,this.gameContainer.addChild(o);const s=this.createUISprite(r,0,77,20,20);s.x=e.x-s.width+10,s.y=e.y+e.height-10,this.gameContainer.addChild(s);const a=this.createUISprite(r,95,77,20,20);a.x=e.x+e.width-10,a.y=e.y+e.height-10,this.gameContainer.addChild(a);const l=this.createUITillingSprite(r,{x:21,y:0,width:73,height:9},{x:n.x+n.width-1,y:n.y,width:e.width-o.width+1,height:9});this.gameContainer.addChild(l);const u=this.createUITillingSprite(r,{x:0,y:21,width:9,height:55},{x:n.x,y:n.y+s.height-2,width:9,height:e.height-s.height+2});this.gameContainer.addChild(u);const d=this.createUITillingSprite(r,{x:106,y:21,width:9,height:55},{x:o.x+11,y:o.y+o.height-2,width:9,height:e.height-o.height+2});this.gameContainer.addChild(d);const _=this.createUITillingSprite(r,{x:21,y:88,width:73,height:9},{x:s.x+s.width,y:s.y+11,width:e.width-o.width,height:9});this.gameContainer.addChild(_);for(let x=e.x+h;x<e.width+e.x;x+=h)this.gameContainer.addChild((new c.TCu).beginFill(15841137,.5).drawRect(x,e.y,2,e.height).endFill());for(let x=e.y+h;x<e.height+e.y;x+=h)this.gameContainer.addChild((new c.TCu).beginFill(15841137,.5).drawRect(e.x,x,e.width,2).endFill())}initFieldGame(e){const r=c.VL4.from("assets/games/crystals/crystals.png");this.fieldContainer=new je(e,[{color:8931836,score:10,texture:new c.xEZ(r,new c.AeJ(0,0,256,256))},{color:15484966,score:10,texture:new c.xEZ(r,new c.AeJ(256,0,256,256))},{color:4446219,score:10,texture:new c.xEZ(r,new c.AeJ(512,0,256,256))},{color:16634633,score:20,texture:new c.xEZ(r,new c.AeJ(768,0,256,256))},{color:15236514,score:30,texture:new c.xEZ(r,new c.AeJ(1024,0,256,256))},{color:3010813,score:40,texture:new c.xEZ(r,new c.AeJ(1280,0,256,256))},{color:16546899,score:50,texture:new c.xEZ(r,new c.AeJ(1536,0,256,256))},{color:2112167,score:60,texture:new c.xEZ(r,new c.AeJ(1792,0,256,256))}]),this.fieldContainer.x=Math.round((this.screenBox.width-e.width*h)/2),this.fieldContainer.y=Math.round((this.screenBox.height-e.height*h)/2),this.fieldContainer.mask=(new c.TCu).beginFill(0).drawRect(this.fieldContainer.x,this.fieldContainer.y,e.width*h,e.height*h).endFill(),this.gameContainer.addChild(this.fieldContainer),this.fieldContainer.score$.pipe((0,T.R)(this.ngUnsubscribe)).subscribe(n=>{this.levelProcessing||(this.stageScore+n>=this.levelScore?(this.allScore+=this.levelScore-this.stageScore,this.progressContainer.updateProgress(100,this.allScore),this.levelUp()):(this.allScore+=n,this.stageScore+=n,this.progressContainer.updateProgress(this.stageScore/this.levelScore*100,this.allScore)))})}levelUp(){this.levelProcessing=!0,this.fieldContainer.clearField().subscribe(()=>{if(this.currentCrystalCount>=7){const e=new c.pn8({fontFamily:"Arial",fontSize:64,fontWeight:"bold",fill:["#ffffff","#00ff99"],stroke:"#4a1850",strokeThickness:5,dropShadow:!0,dropShadowColor:"#000000",dropShadowBlur:4,dropShadowAngle:Math.PI/6,dropShadowDistance:6,wordWrap:!1,lineJoin:"round"}),r=new c.xvT("\u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u0435\u043c!!! \u0412\u044b \u0432\u044b\u0438\u0433\u0440\u0430\u043b\u0438",e);r.x=(this.screenBox.width-r.width)/2,r.y=(this.screenBox.height-r.height)/2,this.gameContainer.addChild(r)}else this.flyLevelUp().subscribe(()=>{this.currentCrystalCount++,this.stageScore=0,this.levelScore=1e4*this.currentCrystalCount,this.fieldContainer.initField(this.currentCrystalCount),this.levelProcessing=!1})})}flyLevelUp(){return new fe.y(e=>{const r=new c.pn8({fontFamily:"Arial",fontSize:64,fontWeight:"bold",fill:["#ffffff","#00ff99"],stroke:"#4a1850",strokeThickness:5,dropShadow:!0,dropShadowColor:"#000000",dropShadowBlur:4,dropShadowAngle:Math.PI/6,dropShadowDistance:6,wordWrap:!1,lineJoin:"round"}),n=new c.xvT("Level Up",r);n.x=(this.screenBox.width-n.width)/2,n.y=(this.screenBox.height-n.height)/2,this.gameContainer.addChild(n),b.M.animate({draw:s=>{this.destroying||(n.y-=75*s,s>=1&&(n.destroy(),e.next(),e.complete()))},duration:2e3,timing:b.d.back})})}createUITillingSprite(e,r,n){const o=new c.xEZ(e,new c.AeJ(r.x,r.y,r.width,r.height)),s=new c.oO3(o,n.width,n.height);return s.x=n.x,s.y=n.y,s}createUISprite(e,r,n,o,s){const a=new c.xEZ(e,new c.AeJ(r,n,o,s)),l=new c.jyi(a);return l.width=o,l.height=s,l}getFieldRect(e){const r=e.width*h,n=e.height*h;return{x:Math.round((this.screenBox.width-r)/2),y:Math.round((this.screenBox.height-n)/2),width:r,height:n}}}return i.\u0275fac=function(){let t;return function(r){return(t||(t=w.n5z(i)))(r||i)}}(),i.\u0275cmp=w.Xpm({type:i,selectors:[["app-games-crystals"]],features:[w.qOj],decls:2,vars:0,consts:[[1,"game-container"],["gameContainer",""]],template:function(e,r){1&e&&w._UZ(0,"div",0,1)},styles:["[_nghost-%COMP%]{flex:auto;display:flex;flex-direction:column;background-color:#004990;padding-left:10px;padding-top:10px}"]}),i})()}];let Sr=(()=>{class i{}return i.\u0275fac=function(e){return new(e||i)},i.\u0275mod=w.oAB({type:i}),i.\u0275inj=w.cJS({imports:[[ge.ez,ye.Bz.forChild(Cr)]]}),i})()}}]);